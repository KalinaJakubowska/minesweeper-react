{"version":3,"sources":["Game/ico.ico","Form/styled.js","useStateItem.js","Form/index.js","Game/styled.js","Game/index.js","Footer/styled.js","Footer/index.js","Display/Timer/styled.js","Display/Timer/index.js","Display/styled.js","Display/index.js","GlobalStyle.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","form","ButtonWrapper","div","Fieldset","fieldset","theme","color","second","first","shadow","hidden","css","Legend","legend","Label","label","Input","input","Button","button","ErrorInfoText","span","useStateItem","keyName","initialValue","useState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","Form","getGameProperties","gameLineColumns","gameLineRows","generateFields","innerLineColumns","setInnerLineColumns","innerLineRows","setInnerLineRows","bombsNumber","setBombsNumber","isDisabled","setIsDisabled","onButtonClick","columns","rows","bombs","level","onSubmit","event","preventDefault","className","onClick","disabled","required","type","step","min","max","value","onChange","target","name","GameBoard","GameField","won","winBomb","loseBomb","bomb","GameButton","rightClicked","Game","gameFields","setGameFields","isGameLost","isGameWon","checkField","onDoubleClick","map","bombsAround","id","key","onContextMenu","slice","onRightClick","footer","text","Footer","p","Timer","timeData","time","setTime","intervalRef","clearInterval","current","endDate","startDate","setInterval","Date","toFixed","Item","Display","bombsLeft","GlobalStyle","createGlobalStyle","App","setGameLineColumns","setGameLineRows","setIsGameLost","setIsGameWon","gameSize","setGameSize","isItBeforeFirstLeftClick","setIsItBeforeFirstLeftClick","setBombsLeft","setTimeData","useRef","filter","length","revealAllBombs","find","idsAroundSelectedField","index","revealAllEmptyFieldsInGroup","newGameFields","revealFieldAndFieldsAround","fieldIndex","revealField","i","countBombsAroundField","reduce","acc","curr","generateBombsPlaces","newBomb","emptyFields","Math","floor","random","includes","firstID","countBombsAroundAllFields","createNewField","countRightClickedAroundField","y","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71d2f19f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ico.950a2bdb.ico\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.form`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const ButtonWrapper = styled.div`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n`\r\nexport const Fieldset = styled.fieldset`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    border: none;\r\n    border-top: 2px solid ${({ theme }) => theme.color.first};\r\n    box-shadow: 0px 0px 10px 0px ${({ theme }) => theme.color.shadow};\r\n    margin-top: 10px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`\r\nexport const Legend = styled.legend`\r\n    width: fit-content;\r\n    text-align: center;\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.first};\r\n    padding: 10px;\r\n    font-weight: bold;\r\n`\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    padding: 10px;\r\n`\r\nexport const Input = styled.input`\r\n    flex-grow: 1;\r\n    margin-left: 20px;\r\n`\r\nexport const Button = styled.button`\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.second};\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n\r\n    &:hover {\r\n        filter: brightness(120%);\r\n        border-color: ${({ theme }) => theme.color.first};\r\n    }\r\n    &:active {\r\n        filter: brightness(130%);\r\n    }\r\n`\r\nexport const ErrorInfoText = styled.span`\r\n    text-align: center;\r\n`","import { useState, useEffect } from \"react\";\r\n\r\nexport const useStateItem = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        if (localStorage.getItem(keyName) === null) {\r\n            return initialValue;\r\n        }\r\n        return JSON.parse(localStorage.getItem(keyName));\r\n    };\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n    Wrapper,\r\n    Button,\r\n    Fieldset,\r\n    Legend,\r\n    Label,\r\n    Input,\r\n    ErrorInfoText,\r\n    ButtonWrapper\r\n} from \"./styled\";\r\nimport { useStateItem } from \"./../useStateItem.js\";\r\n\r\nconst Form = ({ getGameProperties, gameLineColumns, gameLineRows, generateFields }) => {\r\n    const [innerLineColumns, setInnerLineColumns] = useStateItem(\"innerLineColumns\", 8);\r\n    const [innerLineRows, setInnerLineRows] = useStateItem(\"innerLineRows\", 8);\r\n    const [bombsNumber, setBombsNumber] = useStateItem(\"bombsNumberForm\", 10);\r\n    const [isDisabled, setIsDisabled] = useStateItem(\"isDisabled\", true);\r\n\r\n    useEffect(() => {\r\n        generateFields();\r\n    }, [bombsNumber, gameLineColumns, gameLineRows])\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getGameProperties(bombsNumber, innerLineColumns, innerLineRows);\r\n        generateFields();\r\n    }\r\n\r\n    const onButtonClick = (columns, rows, bombs, level) => {\r\n        if (level === 4) {\r\n            setIsDisabled(false);\r\n            return 0;\r\n        }\r\n        setIsDisabled(true);\r\n        setInnerLineColumns(columns);\r\n        setInnerLineRows(rows);\r\n        setBombsNumber(bombs);\r\n    }\r\n\r\n    return (\r\n        <Wrapper onSubmit={onFormSubmit} className=\"form\">\r\n            <Button className=\"form__button\">Rozpocznij nową grę</Button>\r\n            <Fieldset className=\"form__fieldset\">\r\n                <Legend className=\"form__legend\">\r\n                    Zaawansowane opcje\r\n                </Legend>\r\n                <ButtonWrapper>\r\n                    <Button onClick={() => onButtonClick(8, 8, 10, 1)}>Easy</Button>\r\n                    <Button onClick={() => onButtonClick(16, 16, 40, 2)}>Medium</Button>\r\n                    <Button onClick={() => onButtonClick(30, 16, 99, 3)}>Expert</Button>\r\n                    <Button onClick={() => onButtonClick(8, 8, 10, 4)}>Custom</Button>\r\n                </ButtonWrapper>\r\n\r\n                <Label className=\"form__label\">Liczba kolumn\r\n                    <Input\r\n                        disabled={isDisabled}\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"30\"\r\n                        value={innerLineColumns}\r\n                        onChange={({ target }) => setInnerLineColumns(+target.value)}\r\n                        name=\"columnsNumber\"\r\n                        className=\"form__input\"\r\n                    />\r\n                </Label>\r\n                <Label className=\"form__label\">Liczba wierszy\r\n                    <Input\r\n                        disabled={isDisabled}\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"16\"\r\n                        value={innerLineRows}\r\n                        onChange={({ target }) => setInnerLineRows(+target.value)}\r\n                        name=\"rowsNumber\"\r\n                        className=\"form__input\"\r\n                    />\r\n                </Label>\r\n                <Label className=\"form__label\">Liczba bomb\r\n                    <Input\r\n                        disabled={isDisabled}\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"300\"\r\n                        value={bombsNumber}\r\n                        onChange={({ target }) => setBombsNumber(+target.value)}\r\n                        name=\"bombsNumber\"\r\n                        className=\"form__input\"\r\n                    />\r\n                </Label>\r\n                <ErrorInfoText className=\"form__span\"></ErrorInfoText>\r\n            </Fieldset>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\nimport bomb from \"./ico.ico\";\r\n\r\nexport const GameBoard = styled.div`\r\n    width: fit-content;\r\n    margin: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(${({ columns }) => columns}, 40px);\r\n    grid-template-rows: repeat(${({ rows }) => rows}, 40px);\r\n`\r\nexport const GameField = styled.div`\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    font-size: 35px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    user-select: none;\r\n\r\n    ${({ type }) => type === \"bomb\" && css`\r\n        background-color: ${({ won, theme }) => won ? theme.color.winBomb : theme.color.loseBomb};\r\n        background-image: url(${bomb});\r\n        background-size: 25px;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    `}\r\n\r\n    ${({ type }) => type === \"border\" && css`\r\n        background-color: ${({ theme }) => theme.color.first};\r\n    `}\r\n`;\r\nexport const GameButton = styled.button`\r\n    display: block;\r\n    height: 40px;\r\n    width: 40px;\r\n    border-radius: 0;\r\n    background-color: ${({ theme }) => theme.color.shadow};\r\n    border: 2px outset ${({ theme }) => theme.color.second};\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    ${({ rightClicked }) => rightClicked && css`\r\n    background-image: url(${bomb});\r\n    background-size: 25px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    `}\r\n`;","import React from \"react\";\r\nimport { GameButton, GameBoard, GameField } from \"./styled\";\r\n\r\nconst Game = ({\r\n    gameFields,\r\n    setGameFields,\r\n    gameLineColumns,\r\n    gameLineRows,\r\n    isGameLost,\r\n    isGameWon,\r\n    checkField,\r\n    onDoubleClick,\r\n}) => {\r\n\r\n    const onRightClick = (event, id) => {\r\n        event.preventDefault();\r\n        setGameFields(gameFields =>\r\n            [\r\n                ...gameFields.slice(0, id),\r\n                { ...gameFields[id], rightClicked: !gameFields[id].rightClicked },\r\n                ...gameFields.slice(id + 1),\r\n            ]\r\n        )\r\n    }\r\n\r\n    return (\r\n            <GameBoard\r\n                columns={gameLineColumns}\r\n                rows={gameLineRows}\r\n            >\r\n                {gameFields.map(({ bombsAround, type, hidden, id, rightClicked }) => (\r\n                    <GameField\r\n                        onDoubleClick={() => onDoubleClick(id)}\r\n                        key={id}\r\n                        type={type}\r\n                        won={isGameWon && !isGameLost}\r\n                    >\r\n                        <GameButton\r\n                            hidden={!hidden}\r\n                            rightClicked={rightClicked}\r\n                            onClick={() => checkField(id)}\r\n                            onContextMenu={(event) => onRightClick(event, id)}\r\n                            disabled={isGameLost}\r\n                        >\r\n                        </GameButton>\r\n                        {(bombsAround === 0 || type === \"border\") || bombsAround}\r\n                    </GameField>))\r\n                }\r\n            </GameBoard>\r\n    )\r\n}\r\nexport default Game;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.footer`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.text};\r\n    padding: 10px;\r\n`","import React from \"react\";\r\nimport { Wrapper } from \"./styled.js\"\r\n\r\nconst Footer = () => (\r\n    <Wrapper>\r\n        Kalina Jakubowska 2020\r\n    </Wrapper>\r\n)\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    font-size: 40px;\r\n    margin: 10px auto;\r\n    border-right: 3px solid teal;\r\n    border-left: 3px solid teal;\r\n    padding: 0px 20px;\r\n`","import React, {useEffect} from \"react\";\r\nimport { Wrapper } from \"./styled.js\";\r\n\r\nconst Timer = ({\r\n    isGameLost,\r\n    isGameWon,\r\n    timeData,\r\n    time,\r\n    setTime,\r\n    intervalRef }) => {\r\n\r\n    useEffect(() => {\r\n        clearInterval(intervalRef.current);\r\n    }, [isGameLost, isGameWon])\r\n\r\n    useEffect(() => {\r\n        if (timeData) {\r\n            if (timeData.endDate) {\r\n                clearInterval(intervalRef.current);\r\n                setTime(timeData.endDate - timeData.startDate)\r\n            } else {\r\n                intervalRef.current = setInterval(() => {\r\n                    setTime(new Date() - timeData.startDate)\r\n                }, 10)\r\n            }\r\n        }\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [timeData])\r\n\r\n    return (\r\n        <Wrapper>{(time / 1000).toFixed(2)}</Wrapper>\r\n    );\r\n}\r\nexport default Timer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 20% 1fr 20%;\r\n    margin: 0 auto;\r\n    width: ${({ columns }) => columns * 40}px;\r\n    border: 20px solid ${({ theme }) => theme.color.first};\r\n    border-bottom: none;\r\n    background: ${({ theme }) => theme.color.second};\r\n    color: ${({ theme }) => theme.color.first};\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Item = styled.p`\r\n    margin: auto;\r\n    font-size: 35px;\r\n`\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { Wrapper, Item } from \"./styled.js\";\r\n\r\nconst Display = ({\r\n    bombsLeft,\r\n    gameLineColumns,\r\n    timeData,\r\n    time,\r\n    setTime,\r\n    intervalRef }) => (\r\n        <Wrapper columns={gameLineColumns}>\r\n            <Item>{bombsLeft}</Item>\r\n            <Timer\r\n                timeData={timeData}\r\n                time={time}\r\n                setTime={setTime}\r\n                intervalRef={intervalRef}\r\n            />\r\n            <Item>X</Item>\r\n        </Wrapper>\r\n    )\r\n\r\nexport default Display;","import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::before, ::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: 'Montserrat', sans-serif;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  font-size: 16px;\r\n  padding: 50px 0 70px;\r\n}\r\n`","export const theme = {\r\n    color: {\r\n        first: \"teal\",\r\n        second: \"#ffffff\",\r\n        text: \"#eeeeee\",\r\n        shadow: \"#cccccc\",\r\n        loseBomb: \"red\",\r\n        winBomb: \"green\"\r\n    }\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport Form from \"./Form\";\r\nimport Game from \"./Game\";\r\nimport Footer from \"./Footer\";\r\nimport Display from \"./Display\";\r\nimport { GlobalStyle } from \"./GlobalStyle.js\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme.js\";\r\nimport { useStateItem } from \"./useStateItem.js\";\r\n\r\nfunction App() {\r\n  const [gameFields, setGameFields] = useState([]);\r\n  const [gameLineColumns, setGameLineColumns] = useStateItem(\"gameLineColumns\", 10);\r\n  const [gameLineRows, setGameLineRows] = useStateItem(\"gameLineRows\", 10);\r\n  const [bombsNumber, setBombsNumber] = useStateItem(\"bombsNumber\", 10);\r\n  const [isGameLost, setIsGameLost] = useState(false);\r\n  const [isGameWon, setIsGameWon] = useState(false);\r\n  const [gameSize, setGameSize] = useState(gameLineColumns * gameLineRows);\r\n  const [isItBeforeFirstLeftClick, setIsItBeforeFirstLeftClick] = useState(true);\r\n  const [bombsLeft, setBombsLeft] = useState(10);\r\n  const [timeData, setTimeData] = useState();\r\n  const [time, setTime] = useState(0);\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!isGameWon) {\r\n      setBombsLeft(bombsNumber - gameFields.filter(({ rightClicked }) => rightClicked).length)\r\n    }\r\n\r\n    if (gameFields.filter(({ hidden }) => hidden).length === bombsNumber && !isGameLost) {\r\n      setIsGameWon(true);\r\n      setBombsLeft(0);\r\n      revealAllBombs();\r\n      setTimeData({ ...timeData, endDate: new Date() })\r\n    }\r\n\r\n    if (gameFields.filter(({ type }) => type === \"bomb\").find(({ hidden }) => hidden === false)\r\n      && !isGameWon\r\n      && !isGameLost) {\r\n      setIsGameLost(true);\r\n      revealAllBombs();\r\n      setTimeData({ ...timeData, endDate: new Date() })\r\n    }\r\n  }, [gameFields])\r\n\r\n  const getGameProperties = (bombsNumber, innerLineColumns, innerLineRows) => {\r\n    setGameLineColumns(innerLineColumns + 2);\r\n    setGameLineRows(innerLineRows + 2);\r\n    setBombsNumber(bombsNumber);\r\n    setIsGameLost(false);\r\n    setIsGameWon(false);\r\n    setIsItBeforeFirstLeftClick(true);\r\n    setGameSize((innerLineColumns + 2) * (innerLineRows + 2));\r\n    setTime(0);\r\n    clearInterval(intervalRef.current);\r\n  }\r\n\r\n  const idsAroundSelectedField = (index) => {\r\n    const idsAroundFieldTemplate = [\r\n      (gameLineColumns * (-1) - 1),\r\n      (gameLineColumns * (-1)),\r\n      (gameLineColumns * (-1) + 1),\r\n      -1,\r\n      1,\r\n      (gameLineColumns - 1),\r\n      (gameLineColumns),\r\n      (gameLineColumns + 1)\r\n    ];\r\n    return idsAroundFieldTemplate.map(id => id + index);\r\n  };\r\n\r\n  const revealAllEmptyFieldsInGroup = (id, newGameFields = [...gameFields]) => {\r\n    const revealFieldAndFieldsAround = (fieldIndex) => {\r\n      if (newGameFields[fieldIndex].rightClicked === false) {\r\n        newGameFields = [\r\n          ...newGameFields.slice(0, fieldIndex),\r\n          { ...newGameFields[fieldIndex], hidden: false },\r\n          ...newGameFields.slice(fieldIndex + 1),\r\n        ]\r\n      }\r\n\r\n      for (const id of idsAroundSelectedField(fieldIndex)) {\r\n        if (newGameFields[id].type === \"field\"\r\n          && newGameFields[id].bombsAround === 0\r\n          && newGameFields[id].hidden === true\r\n          && newGameFields[id].rightClicked === false) {\r\n          revealFieldAndFieldsAround(id);\r\n\r\n        } else if (newGameFields[id].hidden === true\r\n          && newGameFields[id].rightClicked === false) {\r\n\r\n          newGameFields = [\r\n            ...newGameFields.slice(0, id),\r\n            { ...newGameFields[id], hidden: false },\r\n            ...newGameFields.slice(id + 1),\r\n          ]\r\n        }\r\n      }\r\n    };\r\n    revealFieldAndFieldsAround(id);\r\n    setGameFields(newGameFields);\r\n  };\r\n\r\n  const revealField = (id) => {\r\n    setGameFields(gameFields =>\r\n      [\r\n        ...gameFields.slice(0, id),\r\n        { ...gameFields[id], hidden: false },\r\n        ...gameFields.slice(id + 1),\r\n      ])\r\n  };\r\n\r\n  const revealAllBombs = () => {\r\n    for (let i = 0; i < gameSize; i++) {\r\n      if (gameFields[i].type === \"bomb\") {\r\n        revealField(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkField = (id) => {\r\n    if (isItBeforeFirstLeftClick && !gameFields[id].rightClicked) {\r\n      generateBombsPlaces(id);\r\n      setIsItBeforeFirstLeftClick(false);\r\n      setTimeData({ startDate: new Date() });\r\n      return 0;\r\n    }\r\n    if (gameFields[id].rightClicked) {\r\n      return 0;\r\n    }\r\n\r\n    if (gameFields[id].bombsAround === 0\r\n      && gameFields[id].type !== \"bomb\") {\r\n      revealAllEmptyFieldsInGroup(id);\r\n    } else {\r\n      revealField(id);\r\n    }\r\n  }\r\n\r\n  const countBombsAroundField = (i, newGameFields = [...gameFields]) => {\r\n    return idsAroundSelectedField(i)\r\n      .map(id => +(newGameFields[id].type === \"bomb\"))\r\n      .reduce((acc, curr) => acc + curr);\r\n  }\r\n\r\n  const countRightClickedAroundField = (id) => {\r\n    return idsAroundSelectedField(id)\r\n      .map(id => +(gameFields[id].rightClicked))\r\n      .reduce((acc, curr) => acc + curr);\r\n  }\r\n\r\n  const onDoubleClick = (id) => {\r\n    if (gameFields[id].type === \"field\"\r\n      && countRightClickedAroundField(id) === gameFields[id].bombsAround\r\n      && !gameFields[id].rightClicked) {\r\n      revealAllEmptyFieldsInGroup(id);\r\n    }\r\n  }\r\n\r\n  const countBombsAroundAllFields = (newGameFields, firstID) => {\r\n    for (let i = 0; i < gameSize; i++) {\r\n      if (newGameFields[i].type === \"field\") {\r\n\r\n        newGameFields = [\r\n          ...newGameFields.slice(0, i),\r\n          {\r\n            ...newGameFields[i],\r\n            bombsAround: countBombsAroundField(i, newGameFields)\r\n          },\r\n          ...newGameFields.slice(i + 1),\r\n        ]\r\n      }\r\n    }\r\n    revealAllEmptyFieldsInGroup(firstID, newGameFields);\r\n  };\r\n\r\n  const generateBombsPlaces = (id) => {\r\n    const emptyFields = idsAroundSelectedField(id);\r\n    let newGameFields = [...gameFields]\r\n    let newBomb;\r\n    for (let i = 1; i <= bombsNumber; i++) {\r\n      newBomb = Math.floor(Math.random() * gameSize);\r\n      while (newGameFields[newBomb].type !== \"field\"\r\n        || newBomb === id\r\n        || emptyFields.includes(newBomb)) {\r\n        newBomb = Math.floor(Math.random() * gameSize);\r\n      }\r\n      newGameFields =\r\n        [\r\n          ...newGameFields.slice(0, newBomb),\r\n          { ...newGameFields[newBomb], type: \"bomb\" },\r\n          ...newGameFields.slice(newBomb + 1),\r\n        ]\r\n    }\r\n    countBombsAroundAllFields(newGameFields, id);\r\n  };\r\n\r\n  const createNewField = (type, hidden = true, bombsAround = 0, rightClicked = false) => {\r\n    setGameFields(gameFields => [\r\n      ...gameFields,\r\n      {\r\n        id: gameFields.length,\r\n        type,\r\n        hidden,\r\n        bombsAround,\r\n        rightClicked,\r\n      }]\r\n    );\r\n  };\r\n\r\n  const generateFields = () => {\r\n    setGameFields([]);\r\n    for (let i = 0; i < gameLineRows; i++) {\r\n      for (let y = 0; y < gameLineColumns; y++) {\r\n        if (y === 0 || y === (gameLineColumns - 1) || i === 0 || i === (gameLineRows - 1)) {\r\n          createNewField(\"border\", false);\r\n        } else {\r\n          createNewField(\"field\", true, 0);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <Display\r\n        bombsLeft={bombsLeft}\r\n        gameLineColumns={gameLineColumns}\r\n        timeData={timeData}\r\n        time={time}\r\n        setTime={setTime}\r\n        intervalRef={intervalRef}\r\n      ></Display>\r\n      <Game\r\n        gameFields={gameFields}\r\n        setGameFields={setGameFields}\r\n        gameLineColumns={gameLineColumns}\r\n        gameLineRows={gameLineRows}\r\n        isGameLost={isGameLost}\r\n        isGameWon={isGameWon}\r\n        checkField={checkField}\r\n        onDoubleClick={onDoubleClick}\r\n      />\r\n      <Form\r\n        getGameProperties={getGameProperties}\r\n        gameLineColumns={gameLineColumns}\r\n        gameLineRows={gameLineRows}\r\n        generateFields={generateFields} />\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}