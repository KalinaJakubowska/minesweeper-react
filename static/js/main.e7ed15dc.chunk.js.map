{"version":3,"sources":["features/Game/ico.ico","features/Form/styled.js","useStateItem.js","features/gameSlice.js","features/generateFields.js","features/Form/index.js","features/Game/styled.js","features/Game/index.js","common/Footer/styled.js","common/Footer/index.js","features/Display/Timer/styled.js","features/Display/Timer/index.js","features/Display/styled.js","features/Display/index.js","GlobalStyle.js","common/Footer/theme.js","App.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","Wrapper","styled","form","ButtonWrapper","div","Fieldset","fieldset","theme","color","second","first","shadow","hidden","css","Legend","legend","Label","label","Input","input","Button","button","ErrorInfoText","span","useStateItem","keyName","initialValue","useState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","gameSlice","createSlice","name","initialState","gameFields","gameLineColumns","gameLineRows","bombsNumber","isGameLost","isGameWon","reducers","setGameFields","payload","setIsGameLost","setIsGameWon","revealField","setGameProperties","revealAllBombs","filter","field","type","forEach","actions","setBombsNumber","setGameLineColumns","setGameLineRows","selectGameData","gameData","selectGameFields","selectIsGameLost","selectIsGameWon","selectBombsLeft","rightClicked","length","selectIsGameStarted","createNewField","push","id","bombsAround","generateFields","i","y","Form","innerLineColumns","setInnerLineColumns","innerLineRows","setInnerLineRows","isDisabled","setIsDisabled","dispatch","useDispatch","onButtonClick","columns","rows","bombs","level","onSubmit","event","preventDefault","onClick","disabled","required","step","min","max","value","onChange","target","GameBoard","GameField","won","winBomb","loseBomb","bomb","GameButton","Game","isGameStarted","useSelector","gameSize","find","idsAroundSelectedField","index","map","revealAllEmptyFieldsInGroup","newGameFields","revealFieldAndFieldsAround","fieldIndex","slice","countBombsAroundField","reduce","acc","curr","onDoubleClick","countRightClickedAroundField","generateBombsPlaces","newBomb","emptyFields","Math","floor","random","includes","firstID","countBombsAroundAllFields","onContextMenu","key","checkField","onRightClick","footer","text","Footer","p","Timer","startDate","endDate","timeData","setTimeData","intervalRef","useRef","clearInterval","current","start","Date","setInterval","toFixed","Item","Display","bombsLeft","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","store","configureStore","reducer","gameReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7ed15dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ico.950a2bdb.ico\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.form`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const ButtonWrapper = styled.div`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n`\r\nexport const Fieldset = styled.fieldset`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    border: none;\r\n    border-top: 2px solid ${({ theme }) => theme.color.first};\r\n    box-shadow: 0px 0px 10px 0px ${({ theme }) => theme.color.shadow};\r\n    margin-top: 10px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`\r\nexport const Legend = styled.legend`\r\n    width: fit-content;\r\n    text-align: center;\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.first};\r\n    padding: 10px;\r\n    font-weight: bold;\r\n`\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    padding: 10px;\r\n`\r\nexport const Input = styled.input`\r\n    flex-grow: 1;\r\n    margin-left: 20px;\r\n`\r\nexport const Button = styled.button`\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.second};\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n\r\n    &:hover {\r\n        filter: brightness(120%);\r\n        border-color: ${({ theme }) => theme.color.first};\r\n    }\r\n    &:active {\r\n        filter: brightness(130%);\r\n    }\r\n`\r\nexport const ErrorInfoText = styled.span`\r\n    text-align: center;\r\n`","import { useState, useEffect } from \"react\";\r\n\r\nexport const useStateItem = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        if (localStorage.getItem(keyName) === null) {\r\n            return initialValue;\r\n        }\r\n        return JSON.parse(localStorage.getItem(keyName));\r\n    };\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst gameSlice = createSlice({\r\n    name: \"gameData\",\r\n    initialState: {\r\n        gameFields: [],\r\n        gameLineColumns: localStorage.getItem(\"innerLineColumns\") ? JSON.parse(+localStorage.getItem(\"innerLineColumns\") + 2) : 10,\r\n        gameLineRows: localStorage.getItem(\"innerLineRows\") ? JSON.parse(+localStorage.getItem(\"innerLineRows\") + 2) : 10,\r\n        bombsNumber: JSON.parse(localStorage.getItem(\"bombsNumberForm\")) || 10,\r\n        isGameLost: false,\r\n        isGameWon: false,\r\n    },\r\n    reducers: {\r\n        setGameFields: (state, { payload }) => {\r\n            state.gameFields = payload;\r\n        },\r\n        setIsGameLost: (state, { payload }) => {\r\n            state.isGameLost = payload;\r\n        },\r\n        setIsGameWon: (state, { payload }) => {\r\n            state.isGameWon = payload;\r\n        },\r\n        revealField: ({ gameFields }, { payload: id }) => {\r\n            gameFields[id].hidden = false;\r\n        },\r\n        setGameProperties: (state, { payload: { bombsNumber, gameLineColumns, gameLineRows } }) => {\r\n            state.gameLineColumns = gameLineColumns;\r\n            state.gameLineRows = gameLineRows;\r\n            state.bombsNumber = bombsNumber;\r\n            state.isGameLost = false;\r\n            state.isGameWon = false;\r\n        },\r\n        revealAllBombs: ({ gameFields }) => {\r\n            gameFields.filter(field => field.type === \"bomb\")\r\n                .forEach(field => field.hidden = false)\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setIsGameWon,\r\n    setIsGameLost,\r\n    setBombsNumber,\r\n    setGameLineColumns,\r\n    setGameLineRows,\r\n    setGameFields,\r\n    revealField,\r\n    setGameProperties,\r\n    revealAllBombs,\r\n} = gameSlice.actions;\r\nexport const selectGameData = state => state.gameData;\r\nexport const selectGameFields = state => state.gameData.gameFields;\r\nexport const selectIsGameLost = state => state.gameData.isGameLost;\r\nexport const selectIsGameWon = state => state.gameData.isGameWon;\r\nexport const selectBombsLeft = state => {\r\n    return (\r\n        selectIsGameWon(state)\r\n            ? 0\r\n            : (\r\n                selectGameData(state).bombsNumber\r\n                - selectGameFields(state).filter(({ rightClicked }) => rightClicked).length\r\n            )\r\n    );\r\n};\r\nexport const selectIsGameStarted = (state) => {\r\n    return !selectGameFields(state).filter(field => field.type !== \"border\"\r\n        && field.hidden === false).length\r\n}\r\n\r\nexport default gameSlice.reducer;","let gameFields = []\r\n\r\nconst createNewField = (payload) => {\r\n    gameFields.push(\r\n        {\r\n            id: gameFields.length,\r\n            type: payload[0],\r\n            hidden: payload[1],\r\n            bombsAround: 0,\r\n            rightClicked: false,\r\n        }\r\n    );\r\n};\r\n\r\nexport const generateFields = (gameLineColumns, gameLineRows) => {\r\n    gameFields = [];\r\n    for (let i = 0; i < gameLineRows; i++) {\r\n        for (let y = 0; y < gameLineColumns; y++) {\r\n            if (y === 0 || y === (gameLineColumns - 1) || i === 0 || i === (gameLineRows - 1)) {\r\n                createNewField([\"border\", false]);\r\n            } else {\r\n                createNewField([\"field\", true]);\r\n            }\r\n        }\r\n    };\r\n\r\n    return gameFields;\r\n};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Wrapper,\r\n    Button,\r\n    Fieldset,\r\n    Legend,\r\n    Label,\r\n    Input,\r\n    ErrorInfoText,\r\n    ButtonWrapper,\r\n} from \"./styled\";\r\nimport { useStateItem } from \"./../../useStateItem.js\";\r\nimport { setGameFields, setGameProperties } from \"./../gameSlice\";\r\nimport { generateFields } from \"./../generateFields\";\r\n\r\nconst Form = () => {\r\n    const [innerLineColumns, setInnerLineColumns] = useStateItem(\"innerLineColumns\", 8);\r\n    const [innerLineRows, setInnerLineRows] = useStateItem(\"innerLineRows\", 8);\r\n    const [bombsNumber, setBombsNumber] = useStateItem(\"bombsNumberForm\", 10);\r\n    const [isDisabled, setIsDisabled] = useStateItem(\"isDisabled\", true);\r\n    const gameLineColumns = innerLineColumns + 2;\r\n    const gameLineRows = innerLineRows + 2;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const startNewGame = () => {\r\n        dispatch(setGameFields(generateFields(gameLineColumns, gameLineRows)));\r\n    };\r\n\r\n    const onFormSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(setGameProperties({ bombsNumber, gameLineColumns, gameLineRows }));\r\n        startNewGame();\r\n    };\r\n\r\n    const onButtonClick = (columns, rows, bombs, level) => {\r\n        if (level === 4) {\r\n            setIsDisabled(false);\r\n            return 0;\r\n        }\r\n        setIsDisabled(true);\r\n        setInnerLineColumns(columns);\r\n        setInnerLineRows(rows);\r\n        setBombsNumber(bombs);\r\n    };\r\n\r\n    return (\r\n        <Wrapper onSubmit={onFormSubmit}>\r\n            <Button>Rozpocznij nową grę</Button>\r\n            <Fieldset>\r\n                <Legend>\r\n                    Zaawansowane opcje\r\n                </Legend>\r\n                <ButtonWrapper>\r\n                    <Button onClick={() => onButtonClick(8, 8, 10, 1)}>Easy</Button>\r\n                    <Button onClick={() => onButtonClick(16, 16, 40, 2)}>Medium</Button>\r\n                    <Button onClick={() => onButtonClick(30, 16, 99, 3)}>Expert</Button>\r\n                    <Button disabled onClick={() => onButtonClick(8, 8, 10, 4)}>Custom</Button>\r\n                </ButtonWrapper>\r\n\r\n                <Label>Liczba kolumn\r\n                    <Input\r\n                        disabled={isDisabled}\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"30\"\r\n                        value={innerLineColumns}\r\n                        onChange={({ target }) => setInnerLineColumns(+target.value)}\r\n                        name=\"columnsNumber\"\r\n                    />\r\n                </Label>\r\n                <Label>Liczba wierszy\r\n                    <Input\r\n                        disabled={isDisabled}\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"16\"\r\n                        value={innerLineRows}\r\n                        onChange={({ target }) => setInnerLineRows(+target.value)}\r\n                        name=\"rowsNumber\"\r\n                    />\r\n                </Label>\r\n                <Label>Liczba bomb\r\n                    <Input\r\n                        disabled={isDisabled}\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"300\"\r\n                        value={bombsNumber}\r\n                        onChange={({ target }) => setBombsNumber(+target.value)}\r\n                        name=\"bombsNumber\"\r\n                    />\r\n                </Label>\r\n                <ErrorInfoText />\r\n            </Fieldset>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\nimport bomb from \"./ico.ico\";\r\n\r\nexport const GameBoard = styled.div`\r\n    width: fit-content;\r\n    margin: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(${({ columns }) => columns}, 40px);\r\n    grid-template-rows: repeat(${({ rows }) => rows}, 40px);\r\n`\r\nexport const GameField = styled.div`\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    font-size: 35px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    user-select: none;\r\n\r\n    ${({ type }) => type === \"bomb\" && css`\r\n        background-color: ${({ won, theme }) => won ? theme.color.winBomb : theme.color.loseBomb};\r\n        background-image: url(${bomb});\r\n        background-size: 25px;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    `}\r\n\r\n    ${({ type }) => type === \"border\" && css`\r\n        background-color: ${({ theme }) => theme.color.first};\r\n    `}\r\n`;\r\nexport const GameButton = styled.button`\r\n    display: block;\r\n    height: 40px;\r\n    width: 40px;\r\n    border-radius: 0;\r\n    background-color: ${({ theme }) => theme.color.shadow};\r\n    border: 2px outset ${({ theme }) => theme.color.second};\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    ${({ rightClicked }) => rightClicked && css`\r\n    background-image: url(${bomb});\r\n    background-size: 25px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    `}\r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { GameButton, GameBoard, GameField } from \"./styled\";\r\nimport React, { useEffect } from 'react';\r\nimport {\r\n    selectGameData,\r\n    selectGameFields,\r\n    selectIsGameLost,\r\n    selectIsGameWon,\r\n    setGameFields,\r\n    setIsGameLost,\r\n    selectIsGameStarted,\r\n    setIsGameWon,\r\n    revealField,\r\n    revealAllBombs\r\n} from './../gameSlice';\r\nimport { generateFields } from \"../generateFields\";\r\n\r\nconst Game = () => {\r\n    const isGameStarted = useSelector(selectIsGameStarted);\r\n    const { gameLineColumns, gameLineRows, bombsNumber } = useSelector(selectGameData);\r\n    const gameSize = gameLineColumns * gameLineRows;\r\n    const gameFields = useSelector(selectGameFields);\r\n    const isGameLost = useSelector(selectIsGameLost);\r\n    const isGameWon = useSelector(selectIsGameWon);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setGameFields(generateFields(gameLineColumns, gameLineRows)));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (gameFields.filter(({ hidden }) => hidden).length === bombsNumber && !isGameLost) {\r\n            dispatch(setIsGameWon(true));\r\n            dispatch(revealAllBombs());\r\n        }\r\n\r\n        if (gameFields.filter(({ type }) => type === \"bomb\").find(({ hidden }) => hidden === false)\r\n            && !isGameWon\r\n            && !isGameLost) {\r\n            dispatch(setIsGameLost(true));\r\n            dispatch(revealAllBombs());\r\n        }\r\n    }, [gameFields]);\r\n\r\n\r\n    const idsAroundSelectedField = (index) => {\r\n        const idsAroundFieldTemplate = [\r\n            (gameLineColumns * (-1) - 1),\r\n            (gameLineColumns * (-1)),\r\n            (gameLineColumns * (-1) + 1),\r\n            -1,\r\n            1,\r\n            (gameLineColumns - 1),\r\n            (gameLineColumns),\r\n            (gameLineColumns + 1)\r\n        ];\r\n        return idsAroundFieldTemplate.map(id => id + index);\r\n    };\r\n\r\n    const revealAllEmptyFieldsInGroup = (id, newGameFields = [...gameFields]) => {\r\n        const revealFieldAndFieldsAround = (fieldIndex) => {\r\n            if (newGameFields[fieldIndex].rightClicked === false) {\r\n                newGameFields = [\r\n                    ...newGameFields.slice(0, fieldIndex),\r\n                    { ...newGameFields[fieldIndex], hidden: false },\r\n                    ...newGameFields.slice(fieldIndex + 1),\r\n                ]\r\n            }\r\n\r\n            for (const id of idsAroundSelectedField(fieldIndex)) {\r\n                if (newGameFields[id].type === \"field\"\r\n                    && newGameFields[id].bombsAround === 0\r\n                    && newGameFields[id].hidden === true\r\n                    && newGameFields[id].rightClicked === false) {\r\n                    revealFieldAndFieldsAround(id);\r\n\r\n                } else if (newGameFields[id].hidden === true\r\n                    && newGameFields[id].rightClicked === false) {\r\n\r\n                    newGameFields = [\r\n                        ...newGameFields.slice(0, id),\r\n                        { ...newGameFields[id], hidden: false },\r\n                        ...newGameFields.slice(id + 1),\r\n                    ]\r\n                }\r\n            }\r\n        };\r\n        revealFieldAndFieldsAround(id);\r\n        dispatch(setGameFields(newGameFields));\r\n    };\r\n\r\n    const checkField = (id) => {\r\n        if (isGameStarted && !gameFields[id].rightClicked) {\r\n            generateBombsPlaces(id);\r\n            return 0;\r\n        }\r\n        if (gameFields[id].rightClicked) {\r\n            return 0;\r\n        }\r\n\r\n        if (gameFields[id].bombsAround === 0\r\n            && gameFields[id].type !== \"bomb\") {\r\n            revealAllEmptyFieldsInGroup(id);\r\n        } else {\r\n            dispatch(revealField(id));\r\n        }\r\n    };\r\n\r\n    const countBombsAroundField = (i, newGameFields = [...gameFields]) => {\r\n        return idsAroundSelectedField(i)\r\n            .map(id => +(newGameFields[id].type === \"bomb\"))\r\n            .reduce((acc, curr) => acc + curr);\r\n    };\r\n\r\n    const countRightClickedAroundField = (id) => {\r\n        return idsAroundSelectedField(id)\r\n            .map(id => +(gameFields[id].rightClicked))\r\n            .reduce((acc, curr) => acc + curr);\r\n    };\r\n\r\n    const onDoubleClick = (id) => {\r\n        if (gameFields[id].type === \"field\"\r\n            && countRightClickedAroundField(id) === gameFields[id].bombsAround\r\n            && !gameFields[id].rightClicked) {\r\n            revealAllEmptyFieldsInGroup(id);\r\n        }\r\n    };\r\n\r\n    const countBombsAroundAllFields = (newGameFields, firstID) => {\r\n        for (let i = 0; i < gameSize; i++) {\r\n            if (newGameFields[i].type === \"field\") {\r\n\r\n                newGameFields = [\r\n                    ...newGameFields.slice(0, i),\r\n                    {\r\n                        ...newGameFields[i],\r\n                        bombsAround: countBombsAroundField(i, newGameFields)\r\n                    },\r\n                    ...newGameFields.slice(i + 1),\r\n                ]\r\n            }\r\n        }\r\n        revealAllEmptyFieldsInGroup(firstID, newGameFields);\r\n    };\r\n\r\n    const generateBombsPlaces = (id) => {\r\n        const emptyFields = idsAroundSelectedField(id);\r\n        let newGameFields = [...gameFields];\r\n        let newBomb;\r\n        for (let i = 1; i <= bombsNumber; i++) {\r\n            newBomb = Math.floor(Math.random() * gameSize);\r\n            while (newGameFields[newBomb].type !== \"field\"\r\n                || newBomb === id\r\n                || emptyFields.includes(newBomb)) {\r\n                newBomb = Math.floor(Math.random() * gameSize);\r\n            }\r\n            newGameFields =\r\n                [\r\n                    ...newGameFields.slice(0, newBomb),\r\n                    { ...newGameFields[newBomb], type: \"bomb\" },\r\n                    ...newGameFields.slice(newBomb + 1),\r\n                ]\r\n        }\r\n        countBombsAroundAllFields(newGameFields, id);\r\n    };\r\n\r\n    const onRightClick = (event, id) => {\r\n        event.preventDefault();\r\n\r\n        dispatch(setGameFields([\r\n            ...gameFields.slice(0, id),\r\n            { ...gameFields[id], rightClicked: !gameFields[id].rightClicked },\r\n            ...gameFields.slice(id + 1),\r\n        ]));\r\n    };\r\n\r\n    return (\r\n        <GameBoard\r\n            columns={gameLineColumns}\r\n            rows={gameLineRows}\r\n        >\r\n            {gameFields.map(({ bombsAround, type, hidden, id, rightClicked }) => (\r\n                <GameField\r\n                    onDoubleClick={() => onDoubleClick(id)}\r\n                    onContextMenu={(event) => event.preventDefault()}\r\n                    key={id}\r\n                    type={type}\r\n                    won={isGameWon && !isGameLost}\r\n                >\r\n                    <GameButton\r\n                        hidden={!hidden}\r\n                        rightClicked={rightClicked}\r\n                        onClick={() => checkField(id)}\r\n                        onContextMenu={(event) => onRightClick(event, id)}\r\n                        disabled={isGameLost}\r\n                    >\r\n                    </GameButton>\r\n                    {(bombsAround === 0 || type === \"border\") || bombsAround}\r\n                </GameField>))\r\n            }\r\n        </GameBoard>\r\n    );\r\n};\r\n\r\nexport default Game;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.footer`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.text};\r\n    padding: 10px;\r\n`","import React from \"react\";\r\nimport { Wrapper } from \"./styled.js\"\r\n\r\nconst Footer = () => (\r\n    <Wrapper>\r\n        Kalina Jakubowska 2020\r\n    </Wrapper>\r\n)\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    font-size: 40px;\r\n    margin: 10px auto;\r\n    border-right: 3px solid teal;\r\n    border-left: 3px solid teal;\r\n    padding: 0px 20px;\r\n`","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsGameLost, selectIsGameStarted, selectIsGameWon } from \"../../gameSlice.js\";\r\nimport { Wrapper } from \"./styled.js\";\r\n\r\nconst Timer = () => {\r\n    const isGameWon = useSelector(selectIsGameWon);\r\n    const isGameLost = useSelector(selectIsGameLost);\r\n    const isGameStarted = useSelector(selectIsGameStarted);\r\n    const [timeData, setTimeData] = useState({ startDate: 0, endDate: 0 });\r\n    const intervalRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (isGameWon || isGameLost) {\r\n            clearInterval(intervalRef.current);\r\n        }\r\n    }, [isGameWon, isGameLost]);\r\n\r\n    useEffect(() => {\r\n        if (!isGameStarted) {\r\n            const start = new Date();\r\n            intervalRef.current = setInterval(() => {\r\n                setTimeData({ startDate: start, endDate: new Date() })\r\n            }, 10)\r\n        } else {\r\n            setTimeData({ startDate: 0, endDate: 0 });\r\n        }\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [isGameStarted]);\r\n\r\n    return (\r\n        <Wrapper>{((timeData.endDate - timeData.startDate) / 1000).toFixed(2)}</Wrapper>\r\n    );\r\n}\r\nexport default Timer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 20% 1fr 20%;\r\n    margin: 0 auto;\r\n    width: ${({ columns }) => columns * 40}px;\r\n    border: 20px solid ${({ theme }) => theme.color.first};\r\n    border-bottom: none;\r\n    background: ${({ theme }) => theme.color.second};\r\n    color: ${({ theme }) => theme.color.first};\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Item = styled.p`\r\n    margin: auto;\r\n    font-size: 35px;\r\n`\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { Wrapper, Item } from \"./styled.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGameData, selectBombsLeft } from \"../gameSlice\";\r\n\r\nconst Display = () => {\r\n    const { gameLineColumns } = useSelector(selectGameData);\r\n\r\n    const bombsLeft = useSelector(selectBombsLeft);\r\n\r\n    return (\r\n        <Wrapper columns={gameLineColumns}>\r\n            <Item>{bombsLeft}</Item>\r\n            <Timer />\r\n            <Item>X</Item>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Display;","import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::before, ::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: 'Montserrat', sans-serif;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  font-size: 16px;\r\n  padding: 50px 0 70px;\r\n}\r\n`","export const theme = {\r\n    color: {\r\n        first: \"teal\",\r\n        second: \"#ffffff\",\r\n        text: \"#eeeeee\",\r\n        shadow: \"#cccccc\",\r\n        loseBomb: \"red\",\r\n        winBomb: \"green\"\r\n    }\r\n}","import React from 'react';\r\nimport Form from \"./features/Form\";\r\nimport Game from \"./features/Game\";\r\nimport Footer from \"./common/Footer\";\r\nimport Display from \"./features/Display\";\r\nimport { GlobalStyle } from \"./GlobalStyle.js\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./common/Footer/theme.js\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <Display />\r\n      <Game />\r\n      <Form />\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport gameReducer from \"./features/gameSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        gameData: gameReducer,\r\n    },\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}