{"version":3,"sources":["Form/index.js","Game/index.js","Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Form","getGameProperties","gameLineColumns","gameLineRows","generateFields","useState","innerLineColumns","setInnerLineColumns","innerLineRows","setInnerLineRows","bombsNumber","setBombsNumber","useEffect","onSubmit","event","preventDefault","className","required","type","step","min","max","value","onChange","target","name","Game","gameFields","setGameFields","isGameLost","isGameWon","checkField","onDoubleClick","style","gridTemplateColumns","gridTemplateRows","map","bombsAround","hidden","id","rightClicked","key","onClick","onContextMenu","slice","onRightClick","disabled","Footer","App","setGameLineColumns","setGameLineRows","setIsGameLost","setIsGameWon","gameSize","setGameSize","isItBeforeFirstLeftClick","setIsItBeforeFirstLeftClick","filter","length","revealAllBombs","find","idsAroundSelectedField","index","revealAllEmptyFieldsInGroup","newGameFields","revealFieldAndFieldsAround","fieldIndex","revealField","i","countBombsAroundField","reduce","acc","curr","generateBombsPlaces","newBomb","emptyFields","Math","floor","random","includes","firstID","countBombsAroundAllFields","createNewField","countRightClickedAroundField","y","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3191920.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ getGameProperties, gameLineColumns, gameLineRows, generateFields }) => {\r\n    const [innerLineColumns, setInnerLineColumns] = useState(8);\r\n    const [innerLineRows, setInnerLineRows] = useState(8);\r\n    const [bombsNumber, setBombsNumber] = useState(10);\r\n\r\n    useEffect(() => {\r\n        generateFields();\r\n    }, [bombsNumber, gameLineColumns, gameLineRows])\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getGameProperties(bombsNumber, innerLineColumns, innerLineRows);\r\n        generateFields();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit} className=\"form\">\r\n            <button className=\"form__button\">Rozpocznij nową grę</button>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">\r\n                    Zaawansowane opcje\r\n                </legend>\r\n                <label className=\"form__label\">Liczba kolumn\r\n                    <input\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"25\"\r\n                        value={innerLineColumns}\r\n                        onChange={({ target }) => setInnerLineColumns(+target.value)}\r\n                        name=\"columnsNumber\"\r\n                        className=\"form__input\"\r\n                    />\r\n                </label>\r\n                <label className=\"form__label\">Liczba wierszy\r\n                        <input\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"20\"\r\n                        value={innerLineRows}\r\n                        onChange={({ target }) => setInnerLineRows(+target.value)}\r\n                        name=\"rowsNumber\"\r\n                        className=\"form__input\" />\r\n                </label>\r\n                <label className=\"form__label\">Liczba bomb\r\n                        <input\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"300\"\r\n                        value={bombsNumber}\r\n                        onChange={({ target }) => setBombsNumber(+target.value)}\r\n                        name=\"bombsNumber\"\r\n                        className=\"form__input\" />\r\n                </label>\r\n                <span className=\"form__span\"></span>\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Game = ({\r\n    gameFields,\r\n    setGameFields,\r\n    gameLineColumns,\r\n    gameLineRows,\r\n    isGameLost,\r\n    isGameWon,\r\n    checkField,\r\n    onDoubleClick,\r\n}) => {\r\n\r\n    const onRightClick = (event, id) => {\r\n        event.preventDefault();\r\n        setGameFields(gameFields =>\r\n            [\r\n                ...gameFields.slice(0, id),\r\n                { ...gameFields[id], rightClicked: !gameFields[id].rightClicked },\r\n                ...gameFields.slice(id + 1),\r\n            ]\r\n        )\r\n    }\r\n\r\n    return (\r\n        < div className=\"container container--game\" >\r\n            <div\r\n                className=\"game\"\r\n                style={{\r\n                    gridTemplateColumns: `repeat(${gameLineColumns}, 40px)`,\r\n                    gridTemplateRows: `repeat(${gameLineRows}, 40px)`,\r\n                }}\r\n            >\r\n                {gameFields.map(({ bombsAround, type, hidden, id, rightClicked }) => (\r\n                    <div\r\n                        onDoubleClick={() => onDoubleClick(id)}\r\n                        key={id}\r\n                        className={`game__field\r\n                        ${type === \"field\" ? \"\" : \" game__field--\" + type}\r\n                        ${isGameWon\r\n                                && type === \"bomb\"\r\n                                && !isGameLost\r\n                                ? \" game__field--greenBomb\"\r\n                                : \"\"\r\n                            }`\r\n                        }>\r\n                        <button\r\n                            className={\r\n                                `game__button\r\n                                ${!hidden ? \" game__button--hidden\" : \"\"}\r\n                                ${rightClicked ? \" game__button--rightClicked\" : \"\"}`}\r\n                            onClick={() => checkField(id)}\r\n                            onContextMenu={(event) => onRightClick(event, id)}\r\n                            disabled={isGameLost}\r\n                        >\r\n                        </button>\r\n                        {bombsAround === 0 || type === \"border\" ? \"\" : bombsAround}\r\n                    </div>))\r\n                }\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\nexport default Game;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        Kalina Jakubowska 2020\r\n    </footer>\r\n)\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport Form from \"./Form\";\r\nimport Game from \"./Game\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  const [gameFields, setGameFields] = useState([]);\r\n  const [gameLineColumns, setGameLineColumns] = useState(10);\r\n  const [gameLineRows, setGameLineRows] = useState(10);\r\n  const [bombsNumber, setBombsNumber] = useState(10);\r\n  const [isGameLost, setIsGameLost] = useState(false);\r\n  const [isGameWon, setIsGameWon] = useState(false);\r\n  const [gameSize, setGameSize] = useState(gameLineColumns * gameLineRows);\r\n  const [isItBeforeFirstLeftClick, setIsItBeforeFirstLeftClick] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (gameFields.filter(({ hidden }) => hidden).length === bombsNumber && !isGameLost) {\r\n      setIsGameWon(true);\r\n      revealAllBombs();\r\n    }\r\n\r\n    if (gameFields.filter(({ type }) => type === \"bomb\").find(({ hidden }) => hidden === false)\r\n      && !isGameWon\r\n      && !isGameLost) {\r\n      setIsGameLost(true);\r\n      revealAllBombs();\r\n    }\r\n  }, [gameFields])\r\n\r\n  const getGameProperties = (bombsNumber, innerLineColumns, innerLineRows) => {\r\n    setGameLineColumns(innerLineColumns + 2);\r\n    setGameLineRows(innerLineRows + 2);\r\n    setBombsNumber(bombsNumber);\r\n    setIsGameLost(false);\r\n    setIsGameWon(false);\r\n    setIsItBeforeFirstLeftClick(true);\r\n    setGameSize((innerLineColumns + 2) * (innerLineRows + 2));\r\n  }\r\n\r\n  const idsAroundSelectedField = (index) => {\r\n    const idsAroundFieldTemplate = [\r\n      (gameLineColumns * (-1) - 1),\r\n      (gameLineColumns * (-1)),\r\n      (gameLineColumns * (-1) + 1),\r\n      -1,\r\n      1,\r\n      (gameLineColumns - 1),\r\n      (gameLineColumns),\r\n      (gameLineColumns + 1)\r\n    ];\r\n    return idsAroundFieldTemplate.map(id => id + index);\r\n  };\r\n\r\n  const revealAllEmptyFieldsInGroup = (id, newGameFields = [...gameFields]) => {\r\n    const revealFieldAndFieldsAround = (fieldIndex) => {\r\n      if (newGameFields[fieldIndex].rightClicked === false) {\r\n        newGameFields = [\r\n          ...newGameFields.slice(0, fieldIndex),\r\n          { ...newGameFields[fieldIndex], hidden: false },\r\n          ...newGameFields.slice(fieldIndex + 1),\r\n        ]\r\n      }\r\n\r\n      for (const id of idsAroundSelectedField(fieldIndex)) {\r\n        if (newGameFields[id].type === \"field\"\r\n          && newGameFields[id].bombsAround === 0\r\n          && newGameFields[id].hidden === true) {\r\n\r\n          revealFieldAndFieldsAround(id);\r\n        } else if (newGameFields[id].hidden === true && newGameFields[id].rightClicked === false) {\r\n          newGameFields = [\r\n            ...newGameFields.slice(0, id),\r\n            { ...newGameFields[id], hidden: false },\r\n            ...newGameFields.slice(id + 1),\r\n          ]\r\n        }\r\n      }\r\n    };\r\n    revealFieldAndFieldsAround(id);\r\n    setGameFields(newGameFields);\r\n  };\r\n\r\n  const revealField = (id) => {\r\n    setGameFields(gameFields =>\r\n      [\r\n        ...gameFields.slice(0, id),\r\n        { ...gameFields[id], hidden: false },\r\n        ...gameFields.slice(id + 1),\r\n      ])\r\n  };\r\n\r\n  const revealAllBombs = () => {\r\n    for (let i = 0; i < gameSize; i++) {\r\n      if (gameFields[i].type === \"bomb\") {\r\n        revealField(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkField = (id) => {\r\n    if (isItBeforeFirstLeftClick) {\r\n      generateBombsPlaces(id);\r\n      setIsItBeforeFirstLeftClick(false);\r\n      return 0;\r\n    }\r\n    if (gameFields[id].rightClicked) {\r\n      return 0;\r\n    }\r\n\r\n    if (gameFields[id].bombsAround === 0\r\n      && gameFields[id].type !== \"bomb\") {\r\n      revealAllEmptyFieldsInGroup(id);\r\n    } else {\r\n      revealField(id);\r\n    }\r\n  }\r\n\r\n  const countBombsAroundField = (i, newGameFields = [...gameFields]) => {\r\n    return idsAroundSelectedField(i)\r\n      .map(id => +(newGameFields[id].type === \"bomb\"))\r\n      .reduce((acc, curr) => acc + curr);\r\n  }\r\n\r\n  const countRightClickedAroundField = (id) => {\r\n    return idsAroundSelectedField(id)\r\n      .map(id => +(gameFields[id].rightClicked))\r\n      .reduce((acc, curr) => acc + curr);\r\n  }\r\n\r\n  const onDoubleClick = (id) => {\r\n    if (countRightClickedAroundField(id) === gameFields[id].bombsAround\r\n      && gameFields[id].type !== \"bomb\") {\r\n      revealAllEmptyFieldsInGroup(id);\r\n    }\r\n  }\r\n\r\n  const countBombsAroundAllFields = (newGameFields, firstID) => {\r\n    for (let i = 0; i < gameSize; i++) {\r\n      if (newGameFields[i].type === \"field\") {\r\n\r\n        newGameFields = [\r\n          ...newGameFields.slice(0, i),\r\n          {\r\n            ...newGameFields[i],\r\n            bombsAround: countBombsAroundField(i, newGameFields)\r\n          },\r\n          ...newGameFields.slice(i + 1),\r\n        ]\r\n      }\r\n    }\r\n    revealAllEmptyFieldsInGroup(firstID, newGameFields);\r\n  };\r\n\r\n  const generateBombsPlaces = (id) => {\r\n    const emptyFields = idsAroundSelectedField(id);\r\n    let newGameFields = [...gameFields]\r\n    let newBomb;\r\n    for (let i = 1; i <= bombsNumber; i++) {\r\n      newBomb = Math.floor(Math.random() * gameSize);\r\n      while (newGameFields[newBomb].type !== \"field\"\r\n        || newBomb === id\r\n        || emptyFields.includes(newBomb)) {\r\n        newBomb = Math.floor(Math.random() * gameSize);\r\n      }\r\n      newGameFields =\r\n        [\r\n          ...newGameFields.slice(0, newBomb),\r\n          { ...newGameFields[newBomb], type: \"bomb\" },\r\n          ...newGameFields.slice(newBomb + 1),\r\n        ]\r\n    }\r\n    countBombsAroundAllFields(newGameFields, id);\r\n  };\r\n\r\n  const createNewField = (type, hidden = true, bombsAround = 0, rightClicked = false) => {\r\n    setGameFields(gameFields => [\r\n      ...gameFields,\r\n      {\r\n        id: gameFields.length,\r\n        type,\r\n        hidden,\r\n        bombsAround,\r\n        rightClicked,\r\n      }]\r\n    );\r\n  };\r\n\r\n  const generateFields = () => {\r\n    setGameFields([]);\r\n    for (let i = 0; i < gameLineRows; i++) {\r\n      for (let y = 0; y < gameLineColumns; y++) {\r\n        if (y === 0 || y === (gameLineColumns - 1) || i === 0 || i === (gameLineRows - 1)) {\r\n          createNewField(\"border\", false);\r\n        } else {\r\n          createNewField(\"field\", true, 0);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Game\r\n        gameFields={gameFields}\r\n        setGameFields={setGameFields}\r\n        gameLineColumns={gameLineColumns}\r\n        gameLineRows={gameLineRows}\r\n        isGameLost={isGameLost}\r\n        isGameWon={isGameWon}\r\n        checkField={checkField}\r\n        onDoubleClick={onDoubleClick}\r\n      />\r\n      <Form\r\n        getGameProperties={getGameProperties}\r\n        gameLineColumns={gameLineColumns}\r\n        gameLineRows={gameLineRows}\r\n        generateFields={generateFields} />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}