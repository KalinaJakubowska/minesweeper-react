{"version":3,"sources":["assets/icons/bomb.ico","features/Form/styled.js","features/idsAroundSelectedField.js","features/levelProperties.js","features/gameSlice.js","features/Form/index.js","features/Game/styled.js","features/Game/index.js","common/Footer/styled.js","common/Footer/index.js","features/ScoreBoard/scoreBoardSlice.js","features/Display/Timer/styled.js","features/Display/Timer/index.js","features/Display/styled.js","features/Display/index.js","features/ScoreBoard/styled.js","features/ScoreBoard/index.js","features/styled.js","features/Minesweeper.js","GlobalStyle.js","common/theme/theme.js","App.js","serviceWorker.js","features/gameSaga.js","rootSaga.js","store.js","index.js"],"names":["module","exports","Wrapper","styled","div","ButtonWrapper","Fieldset","fieldset","theme","color","second","first","shadow","hidden","css","Legend","legend","Button","label","input","button","index","columns","map","id","easy","name","rows","bombs","medium","expert","gameSlice","createSlice","initialState","gameFields","gameLevel","localStorage","getItem","levelProperties","bombsNumber","isGameLost","isGameWon","firstID","reducers","setGameFields","state","payload","setIsGameLost","setIsGameWon","revealField","prepareGame","currentLevelProperties","revealAllBombs","filter","field","type","forEach","setFirstID","revealAllEmptyFieldsInGroup","revealFieldAndFieldsAround","fieldIndex","rightClicked","idsAroundSelectedField","bombsAround","generateFieldsContent","gameSize","emptyFields","i","newBomb","Math","floor","random","includes","countBombsAroundField","reduce","acc","curr","countBombsAroundAllFields","actions","selectGameData","gameData","selectFirstID","selectGameFields","selectIsGameLost","selectIsGameWon","selectGameLevel","selectBombsLeft","length","Form","dispatch","useDispatch","onClick","GameBoard","GameField","won","winBomb","loseBomb","bomb","GameButton","Game","useSelector","onDoubleClick","countRightClickedAroundField","onContextMenu","event","preventDefault","key","checkField","slice","onRightClick","disabled","footer","text","Footer","scoreBoardSlice","bestResult","JSON","parse","undefined","updateBestResult","result","level","selectBestResult","scoreBoardData","p","Timer","currentLevel","useState","startDate","endDate","timeData","setTimeData","intervalRef","useRef","useEffect","clearInterval","current","start","Date","setInterval","toFixed","Item","Display","bombsLeft","ScoreBoardWrapper","Header","h2","BestResult","ScoreBoard","Minesweeper","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","revealFieldHandler","startGame","prepareGameHandler","watchRevealField","watchSetFirstID","watchPrepareGame","generateEmptyFields","newGameFields","createNewField","push","y","select","find","put","action","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","gameReducer","scoreBoardReducer","middleware","run","subscribe","setItem","getState","stringify","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29b51177.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.950a2bdb.ico\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin: 0 auto 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const ButtonWrapper = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n`;\r\nexport const Fieldset = styled.fieldset`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.color.second};\r\n  border: none;\r\n  border-top: 2px solid ${({ theme }) => theme.color.first};\r\n  box-shadow: 0px 0px 10px 0px ${({ theme }) => theme.color.shadow};\r\n  margin-top: 10px;\r\n\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\nexport const Legend = styled.legend`\r\n  width: fit-content;\r\n  text-align: center;\r\n  border: 2px solid ${({ theme }) => theme.color.first};\r\n  color: ${({ theme }) => theme.color.first};\r\n  padding: 10px;\r\n  font-weight: bold;\r\n`;\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  padding: 10px;\r\n`;\r\nexport const Input = styled.input`\r\n  flex-grow: 1;\r\n  margin-left: 20px;\r\n`;\r\nexport const Button = styled.button`\r\n  background-color: ${({ theme }) => theme.color.first};\r\n  border: 2px solid ${({ theme }) => theme.color.first};\r\n  color: ${({ theme }) => theme.color.second};\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n\r\n  &:hover {\r\n    filter: brightness(120%);\r\n    border-color: ${({ theme }) => theme.color.first};\r\n  }\r\n  &:active {\r\n    filter: brightness(130%);\r\n  }\r\n`;\r\n","export default (index, columns) => {\r\n  const idsAroundFieldTemplate = [\r\n    columns * -1 - 1,\r\n    columns * -1,\r\n    columns * -1 + 1,\r\n    -1,\r\n    1,\r\n    columns - 1,\r\n    columns,\r\n    columns + 1,\r\n  ];\r\n  return idsAroundFieldTemplate.map((id) => id + index);\r\n};\r\n","export default {\r\n  easy: {\r\n    name: \"easy\",\r\n    rows: 10,\r\n    columns: 10,\r\n    bombs: 10,\r\n  },\r\n  medium: {\r\n    name: \"medium\",\r\n    rows: 18,\r\n    columns: 18,\r\n    bombs: 40,\r\n  },\r\n  expert: {\r\n    name: \"expert\",\r\n    rows: 18,\r\n    columns: 32,\r\n    bombs: 99,\r\n  },\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport idsAroundSelectedField from \"./idsAroundSelectedField\";\r\nimport levelProperties from \"./levelProperties\";\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"gameData\",\r\n  initialState: {\r\n    gameFields: [],\r\n    gameLevel: localStorage.getItem(\"gameLevel\") || \"easy\",\r\n    columns:\r\n      levelProperties[localStorage.getItem(\"gameLevel\")]?.columns ||\r\n      levelProperties[\"easy\"].columns,\r\n    rows:\r\n      levelProperties[localStorage.getItem(\"gameLevel\")]?.rows ||\r\n      levelProperties[\"easy\"].rows,\r\n    bombsNumber:\r\n      levelProperties[localStorage.getItem(\"gameLevel\")]?.bombs ||\r\n      levelProperties[\"easy\"].bombs,\r\n    isGameLost: false,\r\n    isGameWon: false,\r\n    firstID: false,\r\n  },\r\n  reducers: {\r\n    setGameFields: (state, { payload }) => {\r\n      state.gameFields = payload;\r\n    },\r\n    setIsGameLost: (state, { payload }) => {\r\n      state.isGameLost = payload;\r\n    },\r\n    setIsGameWon: (state, { payload }) => {\r\n      state.isGameWon = payload;\r\n    },\r\n    revealField: ({ gameFields }, { payload: id }) => {\r\n      gameFields[id].hidden = false;\r\n    },\r\n    prepareGame: (state, { payload: currentLevelProperties }) => {\r\n      if (currentLevelProperties) {\r\n        state.gameLevel = currentLevelProperties.name;\r\n        state.columns = currentLevelProperties.columns;\r\n        state.rows = currentLevelProperties.rows;\r\n        state.bombsNumber = currentLevelProperties.bombs;\r\n      }\r\n      state.isGameLost = false;\r\n      state.isGameWon = false;\r\n      state.firstID = false;\r\n    },\r\n    revealAllBombs: ({ gameFields }) => {\r\n      gameFields\r\n        .filter((field) => field.type === \"bomb\")\r\n        .forEach((field) => (field.hidden = false));\r\n    },\r\n    setFirstID: (state, { payload }) => {\r\n      state.firstID = payload;\r\n    },\r\n    revealAllEmptyFieldsInGroup: (\r\n      { gameFields, columns },\r\n      { payload: { id } }\r\n    ) => {\r\n      const revealFieldAndFieldsAround = (fieldIndex) => {\r\n        if (gameFields[fieldIndex].rightClicked === false) {\r\n          gameFields[fieldIndex].hidden = false;\r\n        }\r\n\r\n        for (const id of idsAroundSelectedField(fieldIndex, columns)) {\r\n          if (\r\n            gameFields[id].type === \"field\" &&\r\n            !gameFields[id].bombsAround &&\r\n            gameFields[id].hidden &&\r\n            !gameFields[id].rightClicked\r\n          ) {\r\n            revealFieldAndFieldsAround(id);\r\n          } else if (gameFields[id].hidden && !gameFields[id].rightClicked) {\r\n            gameFields[id].hidden = false;\r\n          }\r\n        }\r\n      };\r\n      revealFieldAndFieldsAround(id);\r\n    },\r\n    generateFieldsContent: (state, { payload }) => {\r\n      const gameSize = state.columns * state.rows;\r\n\r\n      const countBombsAroundAllFields = () => {\r\n        const countBombsAroundField = (i) => {\r\n          return idsAroundSelectedField(i, state.columns)\r\n            .map((id) => +(state.gameFields[id].type === \"bomb\"))\r\n            .reduce((acc, curr) => acc + curr);\r\n        };\r\n\r\n        for (let i = 0; i < gameSize; i++) {\r\n          if (state.gameFields[i].type === \"field\") {\r\n            state.gameFields[i].bombsAround = countBombsAroundField(i);\r\n          }\r\n        }\r\n      };\r\n\r\n      const emptyFields = idsAroundSelectedField(payload, state.columns);\r\n\r\n      for (let i = 1; i <= state.bombsNumber; i++) {\r\n        let newBomb = Math.floor(Math.random() * gameSize);\r\n        while (\r\n          state.gameFields[newBomb].type !== \"field\" ||\r\n          newBomb === payload ||\r\n          emptyFields.includes(newBomb)\r\n        ) {\r\n          newBomb = Math.floor(Math.random() * gameSize);\r\n        }\r\n\r\n        state.gameFields[newBomb].type = \"bomb\";\r\n      }\r\n      countBombsAroundAllFields(payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setIsGameWon,\r\n  setIsGameLost,\r\n  setGameFields,\r\n  revealField,\r\n  prepareGame,\r\n  setFirstID,\r\n  revealAllBombs,\r\n  revealAllEmptyFieldsInGroup,\r\n  generateFieldsContent,\r\n} = gameSlice.actions;\r\nexport const selectGameData = (state) => state.gameData;\r\nexport const selectFirstID = (state) => state.gameData.firstID;\r\nexport const selectGameFields = (state) => state.gameData.gameFields;\r\nexport const selectIsGameLost = (state) => state.gameData.isGameLost;\r\nexport const selectIsGameWon = (state) => state.gameData.isGameWon;\r\nexport const selectGameLevel = (state) => state.gameData.gameLevel;\r\nexport const selectBombsLeft = (state) => {\r\n  return selectIsGameWon(state)\r\n    ? 0\r\n    : selectGameData(state).bombsNumber -\r\n        selectGameFields(state).filter(({ rightClicked }) => rightClicked)\r\n          .length;\r\n};\r\n\r\nexport default gameSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Wrapper, Button, Fieldset, Legend, ButtonWrapper } from \"./styled\";\r\nimport { prepareGame } from \"./../gameSlice\";\r\nimport levelProperties from \"./../levelProperties\";\r\n\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Fieldset>\r\n        <Legend>Options</Legend>\r\n        <ButtonWrapper>\r\n          <Button onClick={() => dispatch(prepareGame(levelProperties.easy))}>\r\n            Easy\r\n          </Button>\r\n          <Button onClick={() => dispatch(prepareGame(levelProperties.medium))}>\r\n            Medium\r\n          </Button>\r\n          <Button onClick={() => dispatch(prepareGame(levelProperties.expert))}>\r\n            Expert\r\n          </Button>\r\n        </ButtonWrapper>\r\n        <Button onClick={() => dispatch(prepareGame())}>Start new game</Button>\r\n        {/*<Label>\r\n          Columns\r\n          <Input\r\n            disabled\r\n            required\r\n            type=\"number\"\r\n            value={innerLineColumns}\r\n            name=\"columnsNumber\"\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Rows\r\n          <Input\r\n            disabled\r\n            required\r\n            type=\"number\"\r\n            value={innerLineRows}\r\n            name=\"rowsNumber\"\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Bombs\r\n          <Input\r\n            disabled\r\n            required\r\n            type=\"number\"\r\n            value={bombsNumber}\r\n            name=\"bombsNumber\"\r\n          />\r\n        </Label>*/}\r\n      </Fieldset>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\nimport bomb from \"./../../assets/icons/bomb.ico\";\r\n\r\nexport const GameBoard = styled.div`\r\n    width: fit-content;\r\n    margin: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(${({ columns }) => columns}, 40px);\r\n    grid-template-rows: repeat(${({ rows }) => rows}, 40px);\r\n`\r\nexport const GameField = styled.div`\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    font-size: 35px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    user-select: none;\r\n\r\n    ${({ type }) => type === \"bomb\" && css`\r\n        background-color: ${({ won, theme }) => won ? theme.color.winBomb : theme.color.loseBomb};\r\n        background-image: url(${bomb});\r\n        background-size: 25px;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    `}\r\n\r\n    ${({ type }) => type === \"border\" && css`\r\n        background-color: ${({ theme }) => theme.color.first};\r\n    `}\r\n`;\r\nexport const GameButton = styled.button`\r\n    display: block;\r\n    height: 40px;\r\n    width: 40px;\r\n    border-radius: 0;\r\n    background-color: ${({ theme }) => theme.color.shadow};\r\n    border: 2px outset ${({ theme }) => theme.color.second};\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    ${({ rightClicked }) => rightClicked && css`\r\n    background-image: url(${bomb});\r\n    background-size: 25px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    `}\r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { GameButton, GameBoard, GameField } from \"./styled\";\r\nimport React from \"react\";\r\nimport {\r\n  selectGameData,\r\n  selectGameFields,\r\n  selectIsGameLost,\r\n  selectIsGameWon,\r\n  setGameFields,\r\n  revealField,\r\n  revealAllEmptyFieldsInGroup,\r\n  setFirstID,\r\n} from \"./../gameSlice\";\r\nimport idsAroundSelectedField from \"../idsAroundSelectedField\";\r\n\r\nconst Game = () => {\r\n  const { columns, rows, firstID } = useSelector(\r\n    selectGameData\r\n  );\r\n  const gameFields = useSelector(selectGameFields);\r\n  const isGameLost = useSelector(selectIsGameLost);\r\n  const isGameWon = useSelector(selectIsGameWon);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDoubleClick = (id) => {\r\n    const countRightClickedAroundField = (id) => {\r\n      return idsAroundSelectedField(id, columns)\r\n        .map((id) => +gameFields[id].rightClicked)\r\n        .reduce((acc, curr) => acc + curr);\r\n    };\r\n\r\n    if (\r\n      gameFields[id].type === \"field\" &&\r\n      countRightClickedAroundField(id) === gameFields[id].bombsAround &&\r\n      !gameFields[id].rightClicked\r\n    ) {\r\n      dispatch(revealAllEmptyFieldsInGroup({ id }));\r\n    }\r\n  };\r\n\r\n  const onRightClick = (event, id) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(\r\n      setGameFields([\r\n        ...gameFields.slice(0, id),\r\n        { ...gameFields[id], rightClicked: !gameFields[id].rightClicked },\r\n        ...gameFields.slice(id + 1),\r\n      ])\r\n    );\r\n  };\r\n\r\n  const checkField = (id) => {\r\n    if (!firstID && !gameFields[id].rightClicked) {\r\n      dispatch(setFirstID(id));\r\n    } else if (gameFields[id].rightClicked) {\r\n      return;\r\n    } else if (\r\n      gameFields[id].bombsAround === 0 &&\r\n      gameFields[id].type !== \"bomb\"\r\n    ) {\r\n      dispatch(revealAllEmptyFieldsInGroup({ id }));\r\n    } else {\r\n      dispatch(revealField(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameBoard columns={columns} rows={rows}>\r\n      {gameFields.map(({ bombsAround, type, hidden, id, rightClicked }) => (\r\n        <GameField\r\n          onDoubleClick={() => onDoubleClick(id)}\r\n          onContextMenu={(event) => event.preventDefault()}\r\n          key={id}\r\n          type={type}\r\n          won={isGameWon}\r\n        >\r\n          <GameButton\r\n            hidden={!hidden}\r\n            rightClicked={rightClicked}\r\n            onClick={() => checkField(id)}\r\n            onContextMenu={(event) => onRightClick(event, id)}\r\n            disabled={isGameLost}\r\n          ></GameButton>\r\n          {bombsAround === 0 || type === \"border\" || bombsAround}\r\n        </GameField>\r\n      ))}\r\n    </GameBoard>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.footer`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.text};\r\n    padding: 10px;\r\n`","import React from \"react\";\r\nimport { Wrapper } from \"./styled.js\"\r\n\r\nconst Footer = () => (\r\n    <Wrapper>\r\n        Kalina Jakubowska 2021\r\n    </Wrapper>\r\n)\r\nexport default Footer;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst scoreBoardSlice = createSlice({\r\n  name: \"scoreBoard\",\r\n  initialState: {\r\n    bestResult: JSON.parse(localStorage.getItem(\"bestResult\")) || {\r\n      easy: undefined,\r\n      medium: undefined,\r\n      expert: undefined,\r\n    },\r\n  },\r\n  reducers: {\r\n    updateBestResult: (state, { payload: { result, level } }) => {\r\n      switch (level) {\r\n        case \"easy\":\r\n          if (!state.bestResult.easy || +state.bestResult.easy > +result) {\r\n            state.bestResult.easy = +result;\r\n          }\r\n          break;\r\n        case \"medium\":\r\n          if (!state.bestResult.medium || +state.bestResult.medium > +result) {\r\n            state.bestResult.medium = +result;\r\n          }\r\n          break;\r\n        case \"expert\":\r\n          if (!state.bestResult.expert || +state.bestResult.expert > +result) {\r\n            state.bestResult.expert = +result;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateBestResult } = scoreBoardSlice.actions;\r\n\r\nexport const selectScoreBoardData = (state) => state.scoreBoardData;\r\nexport const selectBestResult = (state) => state.scoreBoardData.bestResult;\r\n\r\nexport default scoreBoardSlice.reducer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    font-size: 40px;\r\n    margin: 10px auto;\r\n    border-right: 3px solid teal;\r\n    border-left: 3px solid teal;\r\n    padding: 0px 20px;\r\n`","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectGameData,\r\n  selectGameLevel,\r\n  selectIsGameLost,\r\n  selectIsGameWon,\r\n} from \"../../gameSlice.js\";\r\nimport { updateBestResult } from \"../../ScoreBoard/scoreBoardSlice.js\";\r\nimport { Wrapper } from \"./styled.js\";\r\n\r\nconst Timer = () => {\r\n  const currentLevel = useSelector(selectGameLevel);\r\n  const isGameWon = useSelector(selectIsGameWon);\r\n  const isGameLost = useSelector(selectIsGameLost);\r\n  const { firstID } = useSelector(selectGameData);\r\n  const [timeData, setTimeData] = useState({ startDate: 0, endDate: 0 });\r\n  const intervalRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isGameWon || isGameLost) {\r\n      clearInterval(intervalRef.current);\r\n      if (isGameWon) {\r\n        dispatch(\r\n          updateBestResult({\r\n            result: (timeData.endDate - timeData.startDate) / 1000,\r\n            level: currentLevel,\r\n          })\r\n        );\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isGameWon, isGameLost]);\r\n\r\n  useEffect(() => {\r\n    if (firstID) {\r\n      const start = new Date();\r\n      intervalRef.current = setInterval(() => {\r\n        setTimeData({ startDate: start, endDate: new Date() });\r\n      }, 10);\r\n    } else {\r\n      setTimeData({ startDate: 0, endDate: 0 });\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [firstID]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {((timeData.endDate - timeData.startDate) / 1000).toFixed(2)}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 20% 1fr 20%;\r\n    margin: 0 auto;\r\n    width: ${({ columns }) => columns * 40}px;\r\n    border: 20px solid ${({ theme }) => theme.color.first};\r\n    border-bottom: none;\r\n    background: ${({ theme }) => theme.color.second};\r\n    color: ${({ theme }) => theme.color.first};\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Item = styled.p`\r\n    margin: auto;\r\n    font-size: 35px;\r\n`\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { Wrapper, Item } from \"./styled.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGameData, selectBombsLeft } from \"../gameSlice\";\r\n\r\nconst Display = () => {\r\n    const { columns } = useSelector(selectGameData);\r\n\r\n    const bombsLeft = useSelector(selectBombsLeft);\r\n\r\n    return (\r\n        <Wrapper columns={columns}>\r\n            <Item>{bombsLeft}</Item>\r\n            <Timer />\r\n            <Item />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Display;","import styled from \"styled-components\";\r\n\r\nexport const ScoreBoardWrapper = styled.div`\r\n  width: 300px;\r\n  padding: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Header = styled.h2`\r\n  color: teal;\r\n  border-bottom: 2px solid teal;\r\n  border-top: 2px solid teal;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const BestResult = styled.p`\r\n  font-size: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGameLevel } from \"../gameSlice\";\r\nimport { selectBestResult } from \"./scoreBoardSlice\";\r\nimport { ScoreBoardWrapper, Header, BestResult } from \"./styled\";\r\n\r\nconst ScoreBoard = () => {\r\n  const bestResult = useSelector(selectBestResult);\r\n  const currentLevel = useSelector(selectGameLevel);\r\n\r\n  return (\r\n    <ScoreBoardWrapper>\r\n      <Header>Best time</Header>\r\n      <BestResult>{bestResult[currentLevel]?.toFixed(2) || \"---\"}</BestResult>\r\n    </ScoreBoardWrapper>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Game from \"./Game\";\r\nimport Footer from \"./../common/Footer\";\r\nimport Display from \"./Display\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { prepareGame } from \"./gameSlice\";\r\nimport ScoreBoard from \"./ScoreBoard\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst Minesweeper = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(prepareGame());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Form />\r\n        <Display />\r\n        <Game />\r\n        <Footer />\r\n      </div>\r\n      <ScoreBoard />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Minesweeper;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::before, ::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: 'Montserrat', sans-serif;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  font-size: 16px;\r\n  padding: 20px 20px 70px;\r\n  background-color: ${({ theme }) => theme.color.second}\r\n}\r\n`;\r\n","export const theme = {\r\n  color: {\r\n    first: \"#008080\",\r\n    second: \"#ffffff\",\r\n    text: \"#eeeeee\",\r\n    shadow: \"#cccccc\",\r\n    loseBomb: \"#FF0000\",\r\n    winBomb: \"#008000\",\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport Minesweeper from \"./features/Minesweeper.js\";\r\nimport { GlobalStyle } from \"./GlobalStyle.js\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Normalize } from \"styled-normalize\";\r\nimport { theme } from \"./common/theme/theme.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Normalize />\r\n      <GlobalStyle />\r\n      <Minesweeper />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { select, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  revealAllBombs,\r\n  revealField,\r\n  selectGameData,\r\n  setIsGameLost,\r\n  setIsGameWon,\r\n  revealAllEmptyFieldsInGroup,\r\n  setFirstID,\r\n  generateFieldsContent,\r\n  selectFirstID,\r\n  prepareGame,\r\n  setGameFields,\r\n  selectGameLevel,\r\n} from \"./gameSlice\";\r\nimport levelProperties from \"./levelProperties\";\r\n\r\nconst generateEmptyFields = (rows, columns) => {\r\n  let newGameFields = [];\r\n  const createNewField = ({ type, hidden }) => {\r\n    newGameFields.push({\r\n      id: newGameFields.length,\r\n      type,\r\n      hidden,\r\n      bombsAround: 0,\r\n      rightClicked: false,\r\n    });\r\n  };\r\n\r\n  for (let i = 0; i < rows; i++) {\r\n    for (let y = 0; y < columns; y++) {\r\n      if (y === 0 || y === columns - 1 || i === 0 || i === rows - 1) {\r\n        createNewField({ type: \"border\", hidden: false });\r\n      } else {\r\n        createNewField({ type: \"field\", hidden: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  return newGameFields;\r\n};\r\n\r\nfunction* revealFieldHandler() {\r\n  const { bombsNumber, gameFields } = yield select(selectGameData);\r\n\r\n  if (\r\n    gameFields\r\n      .filter(({ type }) => type === \"bomb\")\r\n      .find(({ hidden }) => !hidden)\r\n  ) {\r\n    yield put(setIsGameLost(true));\r\n    yield put(revealAllBombs());\r\n  } else if (gameFields.filter(({ hidden }) => hidden).length === bombsNumber) {\r\n    yield put(setIsGameWon(true));\r\n    yield put(revealAllBombs());\r\n  }\r\n}\r\n\r\nfunction* startGame() {\r\n  const firstID = yield select(selectFirstID);\r\n  yield put(generateFieldsContent(firstID));\r\n  yield put(revealAllEmptyFieldsInGroup({ id: firstID }));\r\n}\r\n\r\nfunction* prepareGameHandler(action) {\r\n  const currentLevel = yield select(selectGameLevel);\r\n\r\n  const rows = yield action.payload\r\n    ? action.payload.rows\r\n    : levelProperties[currentLevel].rows;\r\n  const columns = yield action.payload\r\n    ? action.payload.columns\r\n    : levelProperties[currentLevel].columns;\r\n\r\n  const newGameFields = yield generateEmptyFields(rows, columns);\r\n  yield put(setGameFields(newGameFields));\r\n}\r\n\r\nexport function* watchRevealField() {\r\n  yield takeLatest(revealField.type, revealFieldHandler);\r\n  yield takeLatest(revealAllEmptyFieldsInGroup.type, revealFieldHandler);\r\n}\r\n\r\nexport function* watchSetFirstID() {\r\n  yield takeLatest(setFirstID.type, startGame);\r\n}\r\n\r\nexport function* watchPrepareGame() {\r\n  yield takeLatest(prepareGame.type, prepareGameHandler);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { watchRevealField, watchSetFirstID, watchPrepareGame } from \"./features/gameSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchRevealField(), watchSetFirstID(), watchPrepareGame()]);\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport gameReducer from \"./features/gameSlice\";\r\nimport scoreBoardReducer from \"./features/ScoreBoard/scoreBoardSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    gameData: gameReducer,\r\n    scoreBoardData: scoreBoardReducer,\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"gameLevel\", store.getState().gameData.gameLevel);\r\n  localStorage.setItem(\r\n    \"bestResult\",\r\n    JSON.stringify(store.getState().scoreBoardData.bestResult)\r\n  );\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}