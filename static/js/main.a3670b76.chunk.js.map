{"version":3,"sources":["assets/icons/bomb.ico","features/Form/styled.js","useStateItem.js","features/idsAroundSelectedField.js","features/gameSlice.js","features/Form/levelProperties.js","features/Form/index.js","features/Game/styled.js","features/Game/index.js","common/Footer/styled.js","common/Footer/index.js","features/Display/Timer/styled.js","features/Display/Timer/index.js","features/Display/styled.js","features/Display/index.js","GlobalStyle.js","common/theme/theme.js","App.js","serviceWorker.js","features/gameSaga.js","rootSaga.js","store.js","index.js"],"names":["module","exports","Wrapper","styled","form","ButtonWrapper","div","Fieldset","fieldset","theme","color","second","first","shadow","hidden","css","Legend","legend","Label","label","Input","input","Button","button","ErrorInfoText","span","useStateItem","keyName","initialValue","useState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","index","gameLineColumns","map","id","gameSlice","createSlice","name","initialState","gameFields","gameLineRows","bombsNumber","isGameLost","isGameWon","firstID","reducers","setGameFields","payload","setIsGameLost","setIsGameWon","revealField","setGameProperties","revealAllBombs","filter","field","type","forEach","setFirstID","generateEmptyFields","createNewField","push","length","bombsAround","rightClicked","i","y","revealAllEmptyFieldsInGroup","revealFieldAndFieldsAround","fieldIndex","idsAroundSelectedField","generateFieldsContent","gameSize","emptyFields","newBomb","Math","floor","random","includes","countBombsAroundField","reduce","acc","curr","countBombsAroundAllFields","actions","setBombsNumber","setGameLineColumns","setGameLineRows","selectGameData","gameData","selectFirstID","selectGameFields","selectIsGameLost","selectIsGameWon","selectBombsLeft","rows","columns","bombs","Form","innerLineColumns","setInnerLineColumns","innerLineRows","setInnerLineRows","dispatch","useDispatch","onButtonClick","onSubmit","event","preventDefault","onClick","levelProperties","disabled","required","value","GameBoard","GameField","won","winBomb","loseBomb","bomb","GameButton","Game","useSelector","onDoubleClick","countRightClickedAroundField","onContextMenu","key","checkField","slice","onRightClick","footer","text","Footer","p","Timer","startDate","endDate","timeData","setTimeData","intervalRef","useRef","clearInterval","current","start","Date","setInterval","toFixed","Item","Display","bombsLeft","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","revealFieldHandler","watchRevealField","startGame","watchSetFirstID","select","find","put","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","gameReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3670b76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.950a2bdb.ico\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.form`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const ButtonWrapper = styled.div`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n`\r\nexport const Fieldset = styled.fieldset`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    border: none;\r\n    border-top: 2px solid ${({ theme }) => theme.color.first};\r\n    box-shadow: 0px 0px 10px 0px ${({ theme }) => theme.color.shadow};\r\n    margin-top: 10px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`\r\nexport const Legend = styled.legend`\r\n    width: fit-content;\r\n    text-align: center;\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.first};\r\n    padding: 10px;\r\n    font-weight: bold;\r\n`\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    padding: 10px;\r\n`\r\nexport const Input = styled.input`\r\n    flex-grow: 1;\r\n    margin-left: 20px;\r\n`\r\nexport const Button = styled.button`\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.second};\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n\r\n    &:hover {\r\n        filter: brightness(120%);\r\n        border-color: ${({ theme }) => theme.color.first};\r\n    }\r\n    &:active {\r\n        filter: brightness(130%);\r\n    }\r\n`\r\nexport const ErrorInfoText = styled.span`\r\n    text-align: center;\r\n`","import { useState, useEffect } from \"react\";\r\n\r\nexport const useStateItem = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        if (localStorage.getItem(keyName) === null) {\r\n            return initialValue;\r\n        }\r\n        return JSON.parse(localStorage.getItem(keyName));\r\n    };\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n    }, [state, keyName]);\r\n\r\n    return [state, setState];\r\n};\r\n","export default (index, gameLineColumns) => {\r\n  const idsAroundFieldTemplate = [\r\n    gameLineColumns * -1 - 1,\r\n    gameLineColumns * -1,\r\n    gameLineColumns * -1 + 1,\r\n    -1,\r\n    1,\r\n    gameLineColumns - 1,\r\n    gameLineColumns,\r\n    gameLineColumns + 1,\r\n  ];\r\n  return idsAroundFieldTemplate.map((id) => id + index);\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport idsAroundSelectedField from \"./idsAroundSelectedField\";\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"gameData\",\r\n  initialState: {\r\n    gameFields: [],\r\n    gameLineColumns: localStorage.getItem(\"innerLineColumns\")\r\n      ? JSON.parse(+localStorage.getItem(\"innerLineColumns\") + 2)\r\n      : 10,\r\n    gameLineRows: localStorage.getItem(\"innerLineRows\")\r\n      ? JSON.parse(+localStorage.getItem(\"innerLineRows\") + 2)\r\n      : 10,\r\n    bombsNumber: JSON.parse(localStorage.getItem(\"bombsNumberForm\")) || 10,\r\n    isGameLost: false,\r\n    isGameWon: false,\r\n    firstID: false,\r\n  },\r\n  reducers: {\r\n    setGameFields: (state, { payload }) => {\r\n      state.gameFields = payload;\r\n    },\r\n    setIsGameLost: (state, { payload }) => {\r\n      state.isGameLost = payload;\r\n    },\r\n    setIsGameWon: (state, { payload }) => {\r\n      state.isGameWon = payload;\r\n    },\r\n    revealField: ({ gameFields }, { payload: id }) => {\r\n      gameFields[id].hidden = false;\r\n    },\r\n    setGameProperties: (\r\n      state,\r\n      { payload: { bombsNumber, gameLineColumns, gameLineRows } }\r\n    ) => {\r\n      state.gameLineColumns = gameLineColumns;\r\n      state.gameLineRows = gameLineRows;\r\n      state.bombsNumber = bombsNumber;\r\n      state.isGameLost = false;\r\n      state.isGameWon = false;\r\n      state.firstID = false;\r\n    },\r\n    revealAllBombs: ({ gameFields }) => {\r\n      gameFields\r\n        .filter((field) => field.type === \"bomb\")\r\n        .forEach((field) => (field.hidden = false));\r\n    },\r\n    setFirstID: (state, { payload }) => {\r\n      state.firstID = payload;\r\n    },\r\n    generateEmptyFields: (state) => {\r\n      const createNewField = ({ type, hidden }) => {\r\n        state.gameFields.push({\r\n          id: state.gameFields.length,\r\n          type,\r\n          hidden,\r\n          bombsAround: 0,\r\n          rightClicked: false,\r\n        });\r\n      };\r\n\r\n      state.gameFields = [];\r\n\r\n      for (let i = 0; i < state.gameLineRows; i++) {\r\n        for (let y = 0; y < state.gameLineColumns; y++) {\r\n          if (\r\n            y === 0 ||\r\n            y === state.gameLineColumns - 1 ||\r\n            i === 0 ||\r\n            i === state.gameLineRows - 1\r\n          ) {\r\n            createNewField({ type: \"border\", hidden: false });\r\n          } else {\r\n            createNewField({ type: \"field\", hidden: true });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    revealAllEmptyFieldsInGroup: (\r\n      { gameFields, gameLineColumns },\r\n      { payload: { id } }\r\n    ) => {\r\n      const revealFieldAndFieldsAround = (fieldIndex) => {\r\n        if (gameFields[fieldIndex].rightClicked === false) {\r\n          gameFields[fieldIndex].hidden = false;\r\n        }\r\n\r\n        for (const id of idsAroundSelectedField(fieldIndex, gameLineColumns)) {\r\n          if (\r\n            gameFields[id].type === \"field\" &&\r\n            !gameFields[id].bombsAround &&\r\n            gameFields[id].hidden &&\r\n            !gameFields[id].rightClicked\r\n          ) {\r\n            revealFieldAndFieldsAround(id);\r\n          } else if (gameFields[id].hidden && !gameFields[id].rightClicked) {\r\n            gameFields[id].hidden = false;\r\n          }\r\n        }\r\n      };\r\n      revealFieldAndFieldsAround(id);\r\n    },\r\n    generateFieldsContent: (state, { payload }) => {\r\n      const gameSize = state.gameLineColumns * state.gameLineRows;\r\n\r\n      const countBombsAroundAllFields = () => {\r\n        const countBombsAroundField = (i) => {\r\n          return idsAroundSelectedField(i, state.gameLineColumns)\r\n            .map((id) => +(state.gameFields[id].type === \"bomb\"))\r\n            .reduce((acc, curr) => acc + curr);\r\n        };\r\n\r\n        for (let i = 0; i < gameSize; i++) {\r\n          if (state.gameFields[i].type === \"field\") {\r\n            state.gameFields[i].bombsAround = countBombsAroundField(i);\r\n          }\r\n        }\r\n      };\r\n\r\n      const emptyFields = idsAroundSelectedField(\r\n        payload,\r\n        state.gameLineColumns\r\n      );\r\n\r\n      for (let i = 1; i <= state.bombsNumber; i++) {\r\n        let newBomb = Math.floor(Math.random() * gameSize);\r\n        while (\r\n          state.gameFields[newBomb].type !== \"field\" ||\r\n          newBomb === payload ||\r\n          emptyFields.includes(newBomb)\r\n        ) {\r\n          newBomb = Math.floor(Math.random() * gameSize);\r\n        }\r\n\r\n        state.gameFields[newBomb].type = \"bomb\";\r\n      }\r\n      countBombsAroundAllFields(payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setIsGameWon,\r\n  setIsGameLost,\r\n  setBombsNumber,\r\n  setGameLineColumns,\r\n  setGameLineRows,\r\n  setGameFields,\r\n  revealField,\r\n  setGameProperties,\r\n  setFirstID,\r\n  revealAllBombs,\r\n  generateEmptyFields,\r\n  revealAllEmptyFieldsInGroup,\r\n  generateFieldsContent,\r\n} = gameSlice.actions;\r\nexport const selectGameData = (state) => state.gameData;\r\nexport const selectFirstID = (state) => state.gameData.firstID;\r\nexport const selectGameFields = (state) => state.gameData.gameFields;\r\nexport const selectIsGameLost = (state) => state.gameData.isGameLost;\r\nexport const selectIsGameWon = (state) => state.gameData.isGameWon;\r\nexport const selectBombsLeft = (state) => {\r\n  return selectIsGameWon(state)\r\n    ? 0\r\n    : selectGameData(state).bombsNumber -\r\n        selectGameFields(state).filter(({ rightClicked }) => rightClicked)\r\n          .length;\r\n};\r\n\r\nexport default gameSlice.reducer;\r\n","export default {\r\n  easy: {\r\n    rows: 8,\r\n    columns: 8,\r\n    bombs: 10,\r\n  },\r\n  medium: {\r\n    rows: 16,\r\n    columns: 16,\r\n    bombs: 40,\r\n  },\r\n  expert: {\r\n    rows: 16,\r\n    columns: 30,\r\n    bombs: 99,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Wrapper,\r\n  Button,\r\n  Fieldset,\r\n  Legend,\r\n  Label,\r\n  Input,\r\n  ErrorInfoText,\r\n  ButtonWrapper,\r\n} from \"./styled\";\r\nimport { useStateItem } from \"./../../useStateItem.js\";\r\nimport { generateEmptyFields, setGameProperties } from \"./../gameSlice\";\r\nimport levelProperties from \"./levelProperties\";\r\n\r\nconst Form = () => {\r\n  const [innerLineColumns, setInnerLineColumns] = useStateItem(\r\n    \"innerLineColumns\",\r\n    8\r\n  );\r\n  const [innerLineRows, setInnerLineRows] = useStateItem(\"innerLineRows\", 8);\r\n  const [bombsNumber, setBombsNumber] = useStateItem(\"bombsNumberForm\", 10);\r\n  const gameLineColumns = innerLineColumns + 2;\r\n  const gameLineRows = innerLineRows + 2;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(setGameProperties({ bombsNumber, gameLineColumns, gameLineRows }));\r\n    dispatch(generateEmptyFields());\r\n  };\r\n\r\n  const onButtonClick = ({ columns, rows, bombs }) => {\r\n    setInnerLineColumns(columns);\r\n    setInnerLineRows(rows);\r\n    setBombsNumber(bombs);\r\n  };\r\n\r\n  return (\r\n    <Wrapper onSubmit={onFormSubmit}>\r\n      <Button>Start new game</Button>\r\n      <Fieldset>\r\n        <Legend>Options</Legend>\r\n        <ButtonWrapper>\r\n          <Button onClick={() => onButtonClick(levelProperties.easy)}>\r\n            Easy\r\n          </Button>\r\n          <Button onClick={() => onButtonClick(levelProperties.medium)}>\r\n            Medium\r\n          </Button>\r\n          <Button onClick={() => onButtonClick(levelProperties.expert)}>\r\n            Expert\r\n          </Button>\r\n        </ButtonWrapper>\r\n\r\n        <Label>\r\n          Columns\r\n          <Input\r\n            disabled\r\n            required\r\n            type=\"number\"\r\n            value={innerLineColumns}\r\n            name=\"columnsNumber\"\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Rows\r\n          <Input\r\n            disabled\r\n            required\r\n            type=\"number\"\r\n            value={innerLineRows}\r\n            name=\"rowsNumber\"\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Bombs\r\n          <Input\r\n            disabled\r\n            required\r\n            type=\"number\"\r\n            value={bombsNumber}\r\n            name=\"bombsNumber\"\r\n          />\r\n        </Label>\r\n        <ErrorInfoText />\r\n      </Fieldset>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\nimport bomb from \"./../../assets/icons/bomb.ico\";\r\n\r\nexport const GameBoard = styled.div`\r\n    width: fit-content;\r\n    margin: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(${({ columns }) => columns}, 40px);\r\n    grid-template-rows: repeat(${({ rows }) => rows}, 40px);\r\n`\r\nexport const GameField = styled.div`\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    font-size: 35px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    user-select: none;\r\n\r\n    ${({ type }) => type === \"bomb\" && css`\r\n        background-color: ${({ won, theme }) => won ? theme.color.winBomb : theme.color.loseBomb};\r\n        background-image: url(${bomb});\r\n        background-size: 25px;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    `}\r\n\r\n    ${({ type }) => type === \"border\" && css`\r\n        background-color: ${({ theme }) => theme.color.first};\r\n    `}\r\n`;\r\nexport const GameButton = styled.button`\r\n    display: block;\r\n    height: 40px;\r\n    width: 40px;\r\n    border-radius: 0;\r\n    background-color: ${({ theme }) => theme.color.shadow};\r\n    border: 2px outset ${({ theme }) => theme.color.second};\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    ${({ rightClicked }) => rightClicked && css`\r\n    background-image: url(${bomb});\r\n    background-size: 25px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    `}\r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { GameButton, GameBoard, GameField } from \"./styled\";\r\nimport React from \"react\";\r\nimport {\r\n  selectGameData,\r\n  selectGameFields,\r\n  selectIsGameLost,\r\n  selectIsGameWon,\r\n  setGameFields,\r\n  revealField,\r\n  revealAllEmptyFieldsInGroup,\r\n  setFirstID,\r\n} from \"./../gameSlice\";\r\nimport idsAroundSelectedField from \"../idsAroundSelectedField\";\r\n\r\nconst Game = () => {\r\n  const { gameLineColumns, gameLineRows, firstID } = useSelector(\r\n    selectGameData\r\n  );\r\n  const gameFields = useSelector(selectGameFields);\r\n  const isGameLost = useSelector(selectIsGameLost);\r\n  const isGameWon = useSelector(selectIsGameWon);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDoubleClick = (id) => {\r\n    const countRightClickedAroundField = (id) => {\r\n      return idsAroundSelectedField(id, gameLineColumns)\r\n        .map((id) => +gameFields[id].rightClicked)\r\n        .reduce((acc, curr) => acc + curr);\r\n    };\r\n\r\n    if (\r\n      gameFields[id].type === \"field\" &&\r\n      countRightClickedAroundField(id) === gameFields[id].bombsAround &&\r\n      !gameFields[id].rightClicked\r\n    ) {\r\n      dispatch(revealAllEmptyFieldsInGroup({ id }));\r\n    }\r\n  };\r\n\r\n  const onRightClick = (event, id) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(\r\n      setGameFields([\r\n        ...gameFields.slice(0, id),\r\n        { ...gameFields[id], rightClicked: !gameFields[id].rightClicked },\r\n        ...gameFields.slice(id + 1),\r\n      ])\r\n    );\r\n  };\r\n\r\n  const checkField = (id) => {\r\n    if (!firstID && !gameFields[id].rightClicked) {\r\n      dispatch(setFirstID(id));\r\n    } else if (gameFields[id].rightClicked) {\r\n      return;\r\n    } else if (\r\n      gameFields[id].bombsAround === 0 &&\r\n      gameFields[id].type !== \"bomb\"\r\n    ) {\r\n      dispatch(revealAllEmptyFieldsInGroup({ id }));\r\n    } else {\r\n      dispatch(revealField(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameBoard columns={gameLineColumns} rows={gameLineRows}>\r\n      {gameFields.map(({ bombsAround, type, hidden, id, rightClicked }) => (\r\n        <GameField\r\n          onDoubleClick={() => onDoubleClick(id)}\r\n          onContextMenu={(event) => event.preventDefault()}\r\n          key={id}\r\n          type={type}\r\n          won={isGameWon}\r\n        >\r\n          <GameButton\r\n            hidden={!hidden}\r\n            rightClicked={rightClicked}\r\n            onClick={() => checkField(id)}\r\n            onContextMenu={(event) => onRightClick(event, id)}\r\n            disabled={isGameLost}\r\n          ></GameButton>\r\n          {bombsAround === 0 || type === \"border\" || bombsAround}\r\n        </GameField>\r\n      ))}\r\n    </GameBoard>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.footer`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.text};\r\n    padding: 10px;\r\n`","import React from \"react\";\r\nimport { Wrapper } from \"./styled.js\"\r\n\r\nconst Footer = () => (\r\n    <Wrapper>\r\n        Kalina Jakubowska 2020\r\n    </Wrapper>\r\n)\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    font-size: 40px;\r\n    margin: 10px auto;\r\n    border-right: 3px solid teal;\r\n    border-left: 3px solid teal;\r\n    padding: 0px 20px;\r\n`","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectGameData,\r\n  selectIsGameLost,\r\n  selectIsGameWon,\r\n} from \"../../gameSlice.js\";\r\nimport { Wrapper } from \"./styled.js\";\r\n\r\nconst Timer = () => {\r\n  const isGameWon = useSelector(selectIsGameWon);\r\n  const isGameLost = useSelector(selectIsGameLost);\r\n  const { firstID } = useSelector(selectGameData);\r\n  const [timeData, setTimeData] = useState({ startDate: 0, endDate: 0 });\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isGameWon || isGameLost) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n  }, [isGameWon, isGameLost]);\r\n\r\n  useEffect(() => {\r\n    if (firstID) {\r\n      const start = new Date();\r\n      intervalRef.current = setInterval(() => {\r\n        setTimeData({ startDate: start, endDate: new Date() });\r\n      }, 10);\r\n    } else {\r\n      setTimeData({ startDate: 0, endDate: 0 });\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [firstID]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {((timeData.endDate - timeData.startDate) / 1000).toFixed(2)}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Timer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 20% 1fr 20%;\r\n    margin: 0 auto;\r\n    width: ${({ columns }) => columns * 40}px;\r\n    border: 20px solid ${({ theme }) => theme.color.first};\r\n    border-bottom: none;\r\n    background: ${({ theme }) => theme.color.second};\r\n    color: ${({ theme }) => theme.color.first};\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Item = styled.p`\r\n    margin: auto;\r\n    font-size: 35px;\r\n`\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { Wrapper, Item } from \"./styled.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGameData, selectBombsLeft } from \"../gameSlice\";\r\n\r\nconst Display = () => {\r\n    const { gameLineColumns } = useSelector(selectGameData);\r\n\r\n    const bombsLeft = useSelector(selectBombsLeft);\r\n\r\n    return (\r\n        <Wrapper columns={gameLineColumns}>\r\n            <Item>{bombsLeft}</Item>\r\n            <Timer />\r\n            <Item />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Display;","import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::before, ::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: 'Montserrat', sans-serif;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  font-size: 16px;\r\n  padding: 50px 0 70px;\r\n  background-color: ${({theme}) => theme.color.second}\r\n}\r\n`","export const theme = {\r\n  color: {\r\n    first: \"#008080\",\r\n    second: \"#ffffff\",\r\n    text: \"#eeeeee\",\r\n    shadow: \"#cccccc\",\r\n    loseBomb: \"#FF0000\",\r\n    winBomb: \"#008000\",\r\n  },\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Form from \"./features/Form\";\r\nimport Game from \"./features/Game\";\r\nimport Footer from \"./common/Footer\";\r\nimport Display from \"./features/Display\";\r\nimport { GlobalStyle } from \"./GlobalStyle.js\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./common/theme/theme.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { generateEmptyFields } from \"./features/gameSlice\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(generateEmptyFields());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <Display />\r\n      <Game />\r\n      <Form />\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { select, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  revealAllBombs,\r\n  revealField,\r\n  selectGameData,\r\n  setIsGameLost,\r\n  setIsGameWon,\r\n  revealAllEmptyFieldsInGroup,\r\n  setFirstID,\r\n  generateFieldsContent,\r\n  selectFirstID,\r\n} from \"./gameSlice\";\r\n\r\nfunction* revealFieldHandler() {\r\n  const { bombsNumber, gameFields } = yield select(selectGameData);\r\n\r\n  if (\r\n    gameFields\r\n      .filter(({ type }) => type === \"bomb\")\r\n      .find(({ hidden }) => hidden === false)\r\n  ) {\r\n    yield put(setIsGameLost(true));\r\n    yield put(revealAllBombs());\r\n  } else if (gameFields.filter(({ hidden }) => hidden).length === bombsNumber) {\r\n    yield put(setIsGameWon(true));\r\n    yield put(revealAllBombs());\r\n  }\r\n}\r\n\r\nexport function* watchRevealField() {\r\n  yield takeLatest(revealField.type, revealFieldHandler);\r\n  yield takeLatest(revealAllEmptyFieldsInGroup.type, revealFieldHandler);\r\n}\r\n\r\nfunction* startGame() {\r\n  const firstID = yield select(selectFirstID);\r\n  yield put(generateFieldsContent(firstID));\r\n  yield put(revealAllEmptyFieldsInGroup({ id: firstID }));\r\n}\r\n\r\nexport function* watchSetFirstID() {\r\n  yield takeLatest(setFirstID.type, startGame);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { watchRevealField, watchSetFirstID } from \"./features/gameSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchRevealField(), watchSetFirstID()]);\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport gameReducer from \"./features/gameSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    gameData: gameReducer,\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}