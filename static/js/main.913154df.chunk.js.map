{"version":3,"sources":["Game/ico.ico","Form/styled.js","Form/index.js","Game/styled.js","Game/index.js","Footer/styled.js","Footer/index.js","Display/Timer/styled.js","Display/Timer/index.js","Display/styled.js","Display/index.js","GlobalStyle.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","form","Fieldset","fieldset","theme","color","second","first","shadow","hidden","css","Legend","legend","Label","label","Input","input","Button","button","ErrorInfoText","span","Form","getGameProperties","gameLineColumns","gameLineRows","generateFields","useState","innerLineColumns","setInnerLineColumns","innerLineRows","setInnerLineRows","bombsNumber","setBombsNumber","useEffect","onSubmit","event","preventDefault","className","required","type","step","min","max","value","onChange","target","name","GameBoard","div","columns","rows","GameField","won","winBomb","loseBomb","bomb","GameButton","rightClicked","Game","gameFields","setGameFields","isGameLost","isGameWon","checkField","onDoubleClick","map","bombsAround","id","key","onClick","onContextMenu","slice","onRightClick","disabled","footer","text","Footer","p","Timer","timeData","time","setTime","intervalRef","useRef","clearInterval","current","endDate","startDate","setInterval","Date","toFixed","Item","Display","bombsLeft","GlobalStyle","createGlobalStyle","App","setGameLineColumns","setGameLineRows","setIsGameLost","setIsGameWon","gameSize","setGameSize","isItBeforeFirstLeftClick","setIsItBeforeFirstLeftClick","setBombsLeft","setTimeData","filter","length","revealAllBombs","find","idsAroundSelectedField","index","revealAllEmptyFieldsInGroup","newGameFields","revealFieldAndFieldsAround","fieldIndex","revealField","i","countBombsAroundField","reduce","acc","curr","generateBombsPlaces","newBomb","emptyFields","Math","floor","random","includes","firstID","countBombsAroundAllFields","createNewField","countRightClickedAroundField","y","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.913154df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ico.950a2bdb.ico\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.form`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const Fieldset = styled.fieldset`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    border: none;\r\n    border-top: 2px solid ${({ theme }) => theme.color.first};\r\n    box-shadow: 0px 0px 10px 0px ${({ theme }) => theme.color.shadow};\r\n    margin-top: 10px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`\r\nexport const Legend = styled.legend`\r\n    width: fit-content;\r\n    text-align: center;\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.first};\r\n    padding: 10px;\r\n    font-weight: bold;\r\n`\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    padding: 10px;\r\n`\r\nexport const Input = styled.input`\r\n    flex-grow: 1;\r\n    margin-left: 20px;\r\n`\r\nexport const Button = styled.button`\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    border: 2px solid ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.second};\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n\r\n    &:hover {\r\n        filter: brightness(120%);\r\n        border-color: ${({ theme }) => theme.color.first};\r\n    }\r\n    &:active {\r\n        filter: brightness(130%);\r\n    }\r\n`\r\nexport const ErrorInfoText = styled.span`\r\n    text-align: center;\r\n`","import React, { useState, useEffect } from \"react\";\r\nimport { Wrapper, Button, Fieldset, Legend, Label, Input, ErrorInfoText } from \"./styled\";\r\n\r\nconst Form = ({ getGameProperties, gameLineColumns, gameLineRows, generateFields }) => {\r\n    const [innerLineColumns, setInnerLineColumns] = useState(8);\r\n    const [innerLineRows, setInnerLineRows] = useState(8);\r\n    const [bombsNumber, setBombsNumber] = useState(10);\r\n\r\n    useEffect(() => {\r\n        generateFields();\r\n    }, [bombsNumber, gameLineColumns, gameLineRows])\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getGameProperties(bombsNumber, innerLineColumns, innerLineRows);\r\n        generateFields();\r\n    }\r\n\r\n    return (\r\n        <Wrapper onSubmit={onFormSubmit} className=\"form\">\r\n            <Button className=\"form__button\">Rozpocznij nową grę</Button>\r\n            <Fieldset className=\"form__fieldset\">\r\n                <Legend className=\"form__legend\">\r\n                    Zaawansowane opcje\r\n                </Legend>\r\n                <Label className=\"form__label\">Liczba kolumn\r\n                    <Input\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"25\"\r\n                        value={innerLineColumns}\r\n                        onChange={({ target }) => setInnerLineColumns(+target.value)}\r\n                        name=\"columnsNumber\"\r\n                        className=\"form__input\"\r\n                    />\r\n                </Label>\r\n                <Label className=\"form__label\">Liczba wierszy\r\n                    <Input\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"20\"\r\n                        value={innerLineRows}\r\n                        onChange={({ target }) => setInnerLineRows(+target.value)}\r\n                        name=\"rowsNumber\"\r\n                        className=\"form__input\"\r\n                    />\r\n                </Label>\r\n                <Label className=\"form__label\">Liczba bomb\r\n                    <Input\r\n                        required\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"5\"\r\n                        max=\"300\"\r\n                        value={bombsNumber}\r\n                        onChange={({ target }) => setBombsNumber(+target.value)}\r\n                        name=\"bombsNumber\"\r\n                        className=\"form__input\"\r\n                    />\r\n                </Label>\r\n                <ErrorInfoText className=\"form__span\"></ErrorInfoText>\r\n            </Fieldset>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\nimport bomb from \"./ico.ico\";\r\n\r\nexport const GameBoard = styled.div`\r\n    width: fit-content;\r\n    margin: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(${({ columns }) => columns}, 40px);\r\n    grid-template-rows: repeat(${({ rows }) => rows}, 40px);\r\n`\r\nexport const GameField = styled.div`\r\n    background-color: ${({ theme }) => theme.color.second};\r\n    font-size: 35px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    user-select: none;\r\n\r\n    ${({ type }) => type === \"bomb\" && css`\r\n        background-color: ${({ won, theme }) => won ? theme.color.winBomb : theme.color.loseBomb};\r\n        background-image: url(${bomb});\r\n        background-size: 25px;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    `}\r\n\r\n    ${({ type }) => type === \"border\" && css`\r\n        background-color: ${({ theme }) => theme.color.first};\r\n    `}\r\n`;\r\nexport const GameButton = styled.button`\r\n    display: block;\r\n    height: 40px;\r\n    width: 40px;\r\n    border-radius: 0;\r\n    background-color: ${({ theme }) => theme.color.shadow};\r\n    border: 2px outset ${({ theme }) => theme.color.second};\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    ${({ rightClicked }) => rightClicked && css`\r\n    background-image: url(${bomb});\r\n    background-size: 25px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    `}\r\n`;","import React from \"react\";\r\nimport { GameButton, GameBoard, GameField } from \"./styled\";\r\n\r\nconst Game = ({\r\n    gameFields,\r\n    setGameFields,\r\n    gameLineColumns,\r\n    gameLineRows,\r\n    isGameLost,\r\n    isGameWon,\r\n    checkField,\r\n    onDoubleClick,\r\n}) => {\r\n\r\n    const onRightClick = (event, id) => {\r\n        event.preventDefault();\r\n        setGameFields(gameFields =>\r\n            [\r\n                ...gameFields.slice(0, id),\r\n                { ...gameFields[id], rightClicked: !gameFields[id].rightClicked },\r\n                ...gameFields.slice(id + 1),\r\n            ]\r\n        )\r\n    }\r\n\r\n    return (\r\n            <GameBoard\r\n                columns={gameLineColumns}\r\n                rows={gameLineRows}\r\n            >\r\n                {gameFields.map(({ bombsAround, type, hidden, id, rightClicked }) => (\r\n                    <GameField\r\n                        onDoubleClick={() => onDoubleClick(id)}\r\n                        key={id}\r\n                        type={type}\r\n                        won={isGameWon && !isGameLost}\r\n                    >\r\n                        <GameButton\r\n                            hidden={!hidden}\r\n                            rightClicked={rightClicked}\r\n                            onClick={() => checkField(id)}\r\n                            onContextMenu={(event) => onRightClick(event, id)}\r\n                            disabled={isGameLost}\r\n                        >\r\n                        </GameButton>\r\n                        {(bombsAround === 0 || type === \"border\") || bombsAround}\r\n                    </GameField>))\r\n                }\r\n            </GameBoard>\r\n    )\r\n}\r\nexport default Game;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.footer`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background-color: ${({ theme }) => theme.color.first};\r\n    color: ${({ theme }) => theme.color.text};\r\n    padding: 10px;\r\n`","import React from \"react\";\r\nimport { Wrapper } from \"./styled.js\"\r\n\r\nconst Footer = () => (\r\n    <Wrapper>\r\n        Kalina Jakubowska 2020\r\n    </Wrapper>\r\n)\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    font-size: 40px;\r\n    margin: 10px auto;\r\n    border-right: 3px solid teal;\r\n    border-left: 3px solid teal;\r\n    padding: 0px 20px;\r\n`","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Wrapper } from \"./styled.js\";\r\n\r\nconst Timer = ({ isGameLost, isGameWon, timeData }) => {\r\n    const [time, setTime] = useState(0);\r\n    const intervalRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        clearInterval(intervalRef.current);\r\n    }, [isGameLost, isGameWon])\r\n\r\n    useEffect(() => {\r\n        if (timeData) {\r\n            if (timeData.endDate) {\r\n                clearInterval(intervalRef.current);\r\n                setTime(timeData.endDate - timeData.startDate)\r\n            } else {\r\n                intervalRef.current = setInterval(() => {\r\n                    setTime(new Date() - timeData.startDate)\r\n                }, 10)\r\n            }\r\n        }\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [timeData])\r\n\r\n    return (\r\n        <Wrapper>{(time / 1000).toFixed(2)}</Wrapper>\r\n    );\r\n}\r\nexport default Timer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 20% 1fr 20%;\r\n    margin: 0 auto;\r\n    width: ${({ columns }) => columns * 40}px;\r\n    border: 20px solid ${({ theme }) => theme.color.first};\r\n    border-bottom: none;\r\n    background: ${({ theme }) => theme.color.second};\r\n    color: ${({ theme }) => theme.color.first};\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Item = styled.p`\r\n    margin: auto;\r\n    font-size: 35px;\r\n`\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { Wrapper, Item } from \"./styled.js\";\r\n\r\nconst Display = ({ bombsLeft, gameLineColumns, timeData }) => (\r\n    <Wrapper columns={gameLineColumns}>\r\n        <Item>{bombsLeft}</Item>\r\n        <Timer timeData={timeData} />\r\n        <Item>X</Item>\r\n    </Wrapper>\r\n)\r\n\r\nexport default Display;","import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::before, ::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: 'Montserrat', sans-serif;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  font-size: 16px;\r\n  padding: 50px 0 70px;\r\n}\r\n`","export const theme = {\r\n    color: {\r\n        first: \"teal\",\r\n        second: \"#ffffff\",\r\n        text: \"#eeeeee\",\r\n        shadow: \"#cccccc\",\r\n        loseBomb: \"red\",\r\n        winBomb: \"green\"\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Form from \"./Form\";\r\nimport Game from \"./Game\";\r\nimport Footer from \"./Footer\";\r\nimport Display from \"./Display\";\r\nimport { GlobalStyle } from \"./GlobalStyle.js\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme.js\";\r\n\r\nfunction App() {\r\n  const [gameFields, setGameFields] = useState([]);\r\n  const [gameLineColumns, setGameLineColumns] = useState(10);\r\n  const [gameLineRows, setGameLineRows] = useState(10);\r\n  const [bombsNumber, setBombsNumber] = useState(10);\r\n  const [isGameLost, setIsGameLost] = useState(false);\r\n  const [isGameWon, setIsGameWon] = useState(false);\r\n  const [gameSize, setGameSize] = useState(gameLineColumns * gameLineRows);\r\n  const [isItBeforeFirstLeftClick, setIsItBeforeFirstLeftClick] = useState(true);\r\n  const [bombsLeft, setBombsLeft] = useState(10);\r\n  const [timeData, setTimeData] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!isGameWon) {\r\n      setBombsLeft(bombsNumber - gameFields.filter(({ rightClicked }) => rightClicked).length)\r\n    }\r\n\r\n    if (gameFields.filter(({ hidden }) => hidden).length === bombsNumber && !isGameLost) {\r\n      setIsGameWon(true);\r\n      setBombsLeft(0);\r\n      revealAllBombs();\r\n      setTimeData({...timeData, endDate: new Date()})\r\n    }\r\n\r\n    if (gameFields.filter(({ type }) => type === \"bomb\").find(({ hidden }) => hidden === false)\r\n      && !isGameWon\r\n      && !isGameLost) {\r\n      setIsGameLost(true);\r\n      revealAllBombs();\r\n      setTimeData({...timeData, endDate: new Date()})\r\n    }\r\n  }, [gameFields])\r\n\r\n  const getGameProperties = (bombsNumber, innerLineColumns, innerLineRows) => {\r\n    setGameLineColumns(innerLineColumns + 2);\r\n    setGameLineRows(innerLineRows + 2);\r\n    setBombsNumber(bombsNumber);\r\n    setIsGameLost(false);\r\n    setIsGameWon(false);\r\n    setIsItBeforeFirstLeftClick(true);\r\n    setGameSize((innerLineColumns + 2) * (innerLineRows + 2));\r\n  }\r\n\r\n  const idsAroundSelectedField = (index) => {\r\n    const idsAroundFieldTemplate = [\r\n      (gameLineColumns * (-1) - 1),\r\n      (gameLineColumns * (-1)),\r\n      (gameLineColumns * (-1) + 1),\r\n      -1,\r\n      1,\r\n      (gameLineColumns - 1),\r\n      (gameLineColumns),\r\n      (gameLineColumns + 1)\r\n    ];\r\n    return idsAroundFieldTemplate.map(id => id + index);\r\n  };\r\n\r\n  const revealAllEmptyFieldsInGroup = (id, newGameFields = [...gameFields]) => {\r\n    const revealFieldAndFieldsAround = (fieldIndex) => {\r\n      if (newGameFields[fieldIndex].rightClicked === false) {\r\n        newGameFields = [\r\n          ...newGameFields.slice(0, fieldIndex),\r\n          { ...newGameFields[fieldIndex], hidden: false },\r\n          ...newGameFields.slice(fieldIndex + 1),\r\n        ]\r\n      }\r\n\r\n      for (const id of idsAroundSelectedField(fieldIndex)) {\r\n        if (newGameFields[id].type === \"field\"\r\n          && newGameFields[id].bombsAround === 0\r\n          && newGameFields[id].hidden === true\r\n          && newGameFields[id].rightClicked === false) {\r\n          revealFieldAndFieldsAround(id);\r\n\r\n        } else if (newGameFields[id].hidden === true\r\n          && newGameFields[id].rightClicked === false) {\r\n\r\n          newGameFields = [\r\n            ...newGameFields.slice(0, id),\r\n            { ...newGameFields[id], hidden: false },\r\n            ...newGameFields.slice(id + 1),\r\n          ]\r\n        }\r\n      }\r\n    };\r\n    revealFieldAndFieldsAround(id);\r\n    setGameFields(newGameFields);\r\n  };\r\n\r\n  const revealField = (id) => {\r\n    setGameFields(gameFields =>\r\n      [\r\n        ...gameFields.slice(0, id),\r\n        { ...gameFields[id], hidden: false },\r\n        ...gameFields.slice(id + 1),\r\n      ])\r\n  };\r\n\r\n  const revealAllBombs = () => {\r\n    for (let i = 0; i < gameSize; i++) {\r\n      if (gameFields[i].type === \"bomb\") {\r\n        revealField(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkField = (id) => {\r\n    if (isItBeforeFirstLeftClick && !gameFields[id].rightClicked) {\r\n      generateBombsPlaces(id);\r\n      setIsItBeforeFirstLeftClick(false);\r\n      setTimeData({startDate: new Date()});\r\n      return 0;\r\n    }\r\n    if (gameFields[id].rightClicked) {\r\n      return 0;\r\n    }\r\n\r\n    if (gameFields[id].bombsAround === 0\r\n      && gameFields[id].type !== \"bomb\") {\r\n      revealAllEmptyFieldsInGroup(id);\r\n    } else {\r\n      revealField(id);\r\n    }\r\n  }\r\n\r\n  const countBombsAroundField = (i, newGameFields = [...gameFields]) => {\r\n    return idsAroundSelectedField(i)\r\n      .map(id => +(newGameFields[id].type === \"bomb\"))\r\n      .reduce((acc, curr) => acc + curr);\r\n  }\r\n\r\n  const countRightClickedAroundField = (id) => {\r\n    return idsAroundSelectedField(id)\r\n      .map(id => +(gameFields[id].rightClicked))\r\n      .reduce((acc, curr) => acc + curr);\r\n  }\r\n\r\n  const onDoubleClick = (id) => {\r\n    if (gameFields[id].type === \"field\"\r\n      && countRightClickedAroundField(id) === gameFields[id].bombsAround\r\n      && !gameFields[id].rightClicked) {\r\n      revealAllEmptyFieldsInGroup(id);\r\n    }\r\n  }\r\n\r\n  const countBombsAroundAllFields = (newGameFields, firstID) => {\r\n    for (let i = 0; i < gameSize; i++) {\r\n      if (newGameFields[i].type === \"field\") {\r\n\r\n        newGameFields = [\r\n          ...newGameFields.slice(0, i),\r\n          {\r\n            ...newGameFields[i],\r\n            bombsAround: countBombsAroundField(i, newGameFields)\r\n          },\r\n          ...newGameFields.slice(i + 1),\r\n        ]\r\n      }\r\n    }\r\n    revealAllEmptyFieldsInGroup(firstID, newGameFields);\r\n  };\r\n\r\n  const generateBombsPlaces = (id) => {\r\n    const emptyFields = idsAroundSelectedField(id);\r\n    let newGameFields = [...gameFields]\r\n    let newBomb;\r\n    for (let i = 1; i <= bombsNumber; i++) {\r\n      newBomb = Math.floor(Math.random() * gameSize);\r\n      while (newGameFields[newBomb].type !== \"field\"\r\n        || newBomb === id\r\n        || emptyFields.includes(newBomb)) {\r\n        newBomb = Math.floor(Math.random() * gameSize);\r\n      }\r\n      newGameFields =\r\n        [\r\n          ...newGameFields.slice(0, newBomb),\r\n          { ...newGameFields[newBomb], type: \"bomb\" },\r\n          ...newGameFields.slice(newBomb + 1),\r\n        ]\r\n    }\r\n    countBombsAroundAllFields(newGameFields, id);\r\n  };\r\n\r\n  const createNewField = (type, hidden = true, bombsAround = 0, rightClicked = false) => {\r\n    setGameFields(gameFields => [\r\n      ...gameFields,\r\n      {\r\n        id: gameFields.length,\r\n        type,\r\n        hidden,\r\n        bombsAround,\r\n        rightClicked,\r\n      }]\r\n    );\r\n  };\r\n\r\n  const generateFields = () => {\r\n    setGameFields([]);\r\n    for (let i = 0; i < gameLineRows; i++) {\r\n      for (let y = 0; y < gameLineColumns; y++) {\r\n        if (y === 0 || y === (gameLineColumns - 1) || i === 0 || i === (gameLineRows - 1)) {\r\n          createNewField(\"border\", false);\r\n        } else {\r\n          createNewField(\"field\", true, 0);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <Display\r\n        bombsLeft={bombsLeft}\r\n        gameLineColumns={gameLineColumns}\r\n        timeData={timeData}\r\n      ></Display>\r\n      <Game\r\n        gameFields={gameFields}\r\n        setGameFields={setGameFields}\r\n        gameLineColumns={gameLineColumns}\r\n        gameLineRows={gameLineRows}\r\n        isGameLost={isGameLost}\r\n        isGameWon={isGameWon}\r\n        checkField={checkField}\r\n        onDoubleClick={onDoubleClick}\r\n      />\r\n      <Form\r\n        getGameProperties={getGameProperties}\r\n        gameLineColumns={gameLineColumns}\r\n        gameLineRows={gameLineRows}\r\n        generateFields={generateFields} />\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}